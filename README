  
      This LAPS README file is viewable on the WWW via the LAPB home 
      page at http://laps.fsl.noaa.gov/


                       TABLE OF CONTENTS  
                       -----------------         

     1.0 ............  General LAPS info
     2.0 ............  Installing and running the LAPS Ingest/Analysis code 
         2.1 ..............  UNIX System Requirements
         2.1.1 ..................  NetCDF library
         2.1.2 ..................  Perl
         2.1.3 ..................  make
         2.1.4 ..................  C Compiler
         2.1.5 ..................  FORTRAN Compiler
         2.1.6 ..................  Disk Space
         2.1.7 ..................  Memory Etc. (ulimit)
         2.1.8 ..................  Plotting / NCAR graphics library (optional)
         2.2 ..............  Installation Procedure Summary
         2.2.1 ..................  Untarring the Source Code
         2.2.2 ..................  Running Configure
         2.2.3 ..................  Ingest Software changes
         2.2.4 ..................  Running make
               2.2.4.1 ............... Creating multiple data domains
         2.2.5 ..................  Untarring the geography databases
         2.2.6 ..................  Setting Runtime Parameters
         2.2.7 ..................  Running the Localization
         2.3 ..............  Raw data ingest 
         2.3.1 ..................  Radar ingest
         2.4 ..............  Running LAPS Analyses 
         2.4.1 ..................  Purging Output Files
         2.5 ..............  Test data case
         2.5.1 ..................  Analysis Only Test
         2.5.2 ..................  Ingest + Analysis Test
         2.6 ..............  Modifying Compiler Flags     
         2.7 ..............  I/O of LAPS gridded files
         2.8 ..............  CHANGING THE HORIZONTAL DOMAIN
         2.8.1 ..................  Number of Grid Points
         2.8.2 ..................  Location of Domain (Map projections)
         2.8.3 ..................  Domain Resolution 
         2.8.4 ..................  Terrain Databases
         2.8.5 ..................  Terrain Smoothing/Filtering  
         2.9 ..............  CHANGING THE VERTICAL DOMAIN
         2.10 .............  CHANGING THE CYCLE TIME 
         2.11 .............  SURFACE ANALYSIS CHANGES
         2.12 .............  LQ3 (HUMIDITY ANALYSIS) CHANGES
         2.13 .............  LVD (SATELLITE INGEST) CHANGES
         2.14 .............  OTHER RUNTIME PARAMETERS
         2.15 .............  Detecting and Reporting Installation Errors
     3.0 ............  Description of LAPS Processes
         3.1 ..............  Localization Processes
         3.1.1 ..................  Gridgen_model (static.nest7grid generation)
         3.2 ..............  Ingest Processes
         3.2.1 ..................  LGA Model
         3.2.2 ..................  LVD 
         3.2.3 ..................  Polar Radar Data (e.g. WSR 88D Level II, Level III)
         3.2.4 ..................  WSI / NOWRAD RADAR PREPROCESSING (VRC)
         3.2.5 ..................  Radar Mosaic (Under development)
         3.2.6 ..................  PROFILER/VAD (PRO) Ingest
         3.2.7 ..................  RASSs (LRS) Ingest
         3.2.8 ..................  PIREPS/ACARS Ingest
         3.2.9 ..................  RAOB (SND) Ingest
         3.2.10 .................  Cloud Drift Wind (CDW) Ingest
         3.2.11 .................  Surface Data Ingest
         3.3 ..............  Analysis Processes
         3.3.1 ..................  WIND
         3.3.2 ..................  SFC (LSX) 
         3.3.3 ..................  TEMP 
         3.3.4 ..................  CLOUD
         3.3.5 ..................  WATER VAPOR (HUMIDITY PROCESSING)
         3.3.6 ..................  DERIV
         3.3.7 ..................  ACCUM 
         3.3.8 ..................  BALANCE
     4.0 ............  Porting code mods from LAPS users back to FSL
     5.0 ............  LAPS Variables and netCDF File Organization 



----------------- 1.0  General LAPS info --------------------------------------

     Below is a description of the tar file containing the LAPS data ingest and
     analysis code. The predictive component of LAPS (MM5 or RAMS) is
     distributed separately. The main FSL contact for this is 
     Jim Edwards (jedwards@fsl.noaa.gov).

     Please note that FSL provides support for LAPS software only if a prior
     agreement is made to that effect. Additionally, questions concerning LAPS
     must be asked in reference to the latest released tar file; we cannot 
     support older versions of LAPS code. It is also recommended that LAPS 
     users try to take advantage of the latest LAPS updates by periodically 
     importing a fresh tar file every few months or so. Please check the
     release notes at http://laps.fsl.noaa.gov/software/release_notes.html
     for information about recent releases.

---------- 2.0 Installing and running the LAPS Ingest/Analysis code -----------

      ----------------  2.1   UNIX System Requirements  ----------------

     Supported UNIX platforms include
<pre>
     IBM rs6000      AIX3.25 and AIX4. NFS mounted disks should be mounted with
                                       NFS version 2 instead of 3.
     HP              HPUX 10.20
     SunOS (Solaris) 5.6               Requires f90
     IRIX64          6.4               Works using f77 but requires namelist 
                                       end delimiter be changed from / to $
     DEC (Alpha)
</pre>

     We are working on adding more supported platforms. We welcome suggestions
     on how to modify LAPS for other platforms, though we cannot yet guarantee
     the portability of LAPS to these additional platforms.

                      --- 2.1.1   NetCDF library   ---
 
     The NetCDF package is required for laps, it is available via internet at 
     'http://www.unidata.ucar.edu/packages/netcdf/'
     netcdf 3.3.1 or higher is required.
     Once netCDF is properly installed, check that the 'ncdump' and 'ncgen' 
     programs are in your path (e.g. 'which ncdump'), so that 'configure' 
     will find them and provide the laps package with the proper path. You 
     can also provide the path to netcdf to 'configure' by using the command 
     line argument --netcdf=path_to_ncdump.
   
                      --- 2.1.2  Perl             ---

     The perl package is also required for laps, it is available 
     via internet at any gnu site such as 'ftp://prep.ai.mit.edu/pub/gnu'.  
     Perl 5.003 or higher is required. Check that 'perl' is in your path.

                      --- 2.1.3  make             ---

     Laps Makefiles work best by using gnu make (version 3.75 or higher).  
     This is available at any gnu site such as 'ftp://prep.ai.mit.edu/pub/gnu'.
     Some vendor provided make utilities may also work, however if you find 
     you are having problems in this area please try installing and using gnu 
     make. Check that 'make' is in your path.

                    ---  2.1.4  C Compiler ---

     In general, an ANSI compliant C compiler should be used. On some hardware
     ANSI compliance requires a compiler flag, if you're not sure check the 
     documentation for your compiler. Some platforms such as Solaris and HPUX 
     do not come with an ANSI compliant C compiler by default.  If you have 
     not purchased that additional product from the vendor, we recommend GNU C
     available at 'ftp://prep.ai.mit.edu/pub/gnu'. Check that the C compiler
     is in your path.

                  ---  2.1.5  FORTRAN Compiler ---

     Please note that LAPS uses dynamic memory within the FORTRAN code in
     the form of automatic arrays. This implies that you will need a FORTRAN
     90 compiler, or at least an f77 compiler that has f90 extensions
     allowing for automatic arrays. LAPS will not work on a strict f77 
     compiler that does not allow automatic arrays. Conversely, we are using
     only a subset of f90 constructs to help ensure compatability with f77
     compilers. Check that the FORTRAN compiler is in your path.

     For IBM/AIX platforms 'xlf' is recommended.

                    ---  2.1.6  Disk Space ---

     The disk space requirements for LAPS vary depending on the implementation.
     As a general guide, 10MB would be needed for source code. About 30MB are 
     needed for executable binaries. 500MB to 1GB are typically needed for 
     12-24 hours worth of output data. A similar amount of space is needed
     for the raw input data.

                    ---  2.1.7  Memory Etc. ---

     'ulimit' settings should be placed at 'unlimited' if possible. Memory
     requirements vary for LAPS. As a general guide, 128MB is needed and
     256MB is preferred. More is needed for large domains.
   
            ---  2.1.8  Plotting / NCAR graphics library (optional)  ---

     To build the lapsplot process, access to an NCAR graphics library is 
     needed to be able to run the 'ncargf77' command. Lapsplot is an optional 
     plotting program, thus NCAR graphics is optional. You might wish to check
     the following World Wide Web location for more info...

                   http://ngwww.ucar.edu

     The 'lapsplot.exe' executable is an interactive program that reads in
     the NetCDF LAPS files and produces a 'gmeta' file as output. The 'gmeta'
     file can be displayed using other NCAR graphics utilities like 'ctrans'
     and 'idt'.

     'Lapsplot' is designed to work with version 3.2 (or higher) of NCAR 
     graphics. The environment variable $NCARG_ROOT should be set when
     compiling or running 'lapsplot.exe'. 

     Lapsplot is built as a special option to 'make', simply type 
     'make lapsplot' or 'make install_lapsplot'. 
     It is not built with a plain run of 'make'.
     Check that 'ncargf77' or 'ncargf90' is in your path, depending on which
     FORTRAN compiler you are using.
     The script 'ncargf90' (if you're using this one) should be using the 
     appropriate FORTRAN compiler; you may have to edit the script.

     'Lapsplot' can be modified to show political boundaries outside of the 
     U.S. The following data files are relevant from the 'static/ncarg' 
     directory: 'continent_minus_us.dat', 'state_from_counties.dat', and 
     'uscounty.dat'.

     Please note that 'lapsplot' is provided to help you check out how your
     LAPS implementation is working. The LAPB Branch does not have any other 
     plotting or visualization packages available with LAPS at this time. 
     One note of interest is that LAPS is visualized as an integral part of 
     the AWIPS system.


     ------------- 2.2 Installation Procedure Summary ------------------

     To introduce this section, here is a hierarchical listing of some primary 
     directories and files in the laps tree. The default LAPS structure is
     shown. These are created/addressed in various portions of section 2.2 
     and beyond.

     <pre>
     /home_disk/
         raw_data/
         geog/
             laps_terrain.tar
         laps-m-n-o.tar
         laps-m-n-o/                                                (laps_root)
             Makefile
             src/
                 ingest/
             etc/                                                (laps scripts)
             bin/                                                 (executables)
             data/                   (=LAPS_DATA_ROOT, can be moved/duplicated)
                 lapsprd/
                     product_list/                                (laps output)
                 log/
                 static/
                     nest7grid.parms                      (namelist parameters)
                     *.nl                                 (namelist parameters)
                     static.nest7grid                      (gridded topography)
                 time/
             testdata/                             (optional, can be relocated)
                 lapsprd/
                     product_list/
     </pre>

     In many UNIX environments, large data files are stored on a "data" disk 
     and the source code is stored on a smaller "home" disk. Below is a
     typical laps directory structure for that setup. The soft link allows
     most things to be referenced from either disk.

     <pre>
     /home_disk/
         src/
             laps-m-n-o.tar
             laps-m-n-o/                                            (laps_root)
                 Makefile
                 src/                                             (source code)
                     ingest/
         laps/   ----------------->  soft linked to /data_disk/laps/

     /data_disk/
         geog/
             laps_terrain.tar
         raw_data/
         laps/                                        (--prefix in 'configure')
             etc/                                                (laps scripts)
             bin/                                                 (executables)
             data*/                         (LAPS_DATA_ROOT, can be duplicated)
                 lapsprd/
                     product_list/                                (laps output)
                 log/
                 static/
                     nest7grid.parms                      (namelist parameters)
                     *.nl                                 (namelist parameters)
                     static.nest7grid                      (gridded topography)
                 time/

             testdata/                             (optional, can be relocated)
                 lapsprd/
                     product_list/
     </pre>


            ----   2.2.1  Untarring the Source Code  ---

     Place the tar file in the directory '/home_disk' or '/home_disk/src'.
     Untar the laps source code using a command like...
     $ zcat laps-m-n-o.tar.gz | tar xf -
 
     OR...

     $ gunzip laps-m-n-o.tar.gz
     $ tar -xf laps-m-n-o.tar

     The laps root directory will be set up one level below the tar file.

     If you are having trouble running 'gunzip', the problem could be that
     the 'laps-m-n-o.tar.gz' file was corrupted during the download. In that
     case simply try downloading again.

                ----   2.2.2  Running Configure ---

     Go to the laps root directory and run...
     $ ./configure

     For IBM/AIX platforms, you will want to override the default FORTRAN
     compiler with 'xlf' using the option --fc=xlf. For Solaris, you will want
     to use --fc=f90.

     'configure' supports many other options, the most important is the
     --prefix option which tells make where to install the laps system. 
     The default (if you did not use --prefix) is to install whereever 
     the source is. A fully operational laps system can require up to 1 GB 
     of disk space, this will vary depending on domain size and purge 
     interval (more on this later).  You can also separate the data 
     (read/write) from the binary executables, (i.e. /bin, /etc - read only) 
     using the --datadir option.  The use of the --prefix and --datadir 
     options is recommended to make it easier to add multiple domains and to 
     update your source code. 

     For example, to install laps in directory '/data_disk/laps' with data 
     in '/data_disk/laps/data' use... 
     $ ./configure --prefix=/data_disk/laps
     
     To install in '/usr/local/laps' with data in '/data_disk/laps/data1' use...
     $ ./configure --prefix=/usr/local/laps --datadir=/data_disk/laps/data1
     
     One or more alternate data directories for running laps can be specified 
     at runtime, if desired. A single set of binaries can thus support several 
     data directories as described below. Separating the data directory
     also makes it a bit easier to maintain your own local set of parameters 
     that are unique to your domain. 

     Another configure option is --arch. Configure tries to get the 
     architecture from a 'uname' command, but this can be overridden by having
     an $ARCH environment variable or by using --arch. The allowed values for 
     'arch' include 'aix', 'hpux', etc.

                --- 2.2.3   Ingest Software changes ---

     In this file (mainly Sec 2.3), a number of potential manual changes to 
     ingest code are outlined prior to running 'make' and 
     'etc/laps_localization.pl', especially if one is using ingest data formats 
     other than "standard" ones used at FSL. After becoming familiar with 
     the changes needed for your implementation, it is recommended that you 
     develop a method to save the hand edited files in a "safe" place 
     outside of the laps directory structure, or by using a revision control 
     system such as CVS.  This strategy would make it easier to update your 
     implementation of LAPS with the latest 'laps-m-n-o.tar.gz' file from FSL, 
     while minimizing the hassle involved with software modifications for 
     your local implementation.


                ----   2.2.4  Running make ---

     The next step is to build and install the executables, this can be done 
     by running... 

     $ cd (laps_root)
     $ make                  1> make.out 2>&1 
     $ make install          1> make_install.out 2>&1 
     $ make install_lapsplot 1> make_install_lapsplot.out 2>&1   

     Check that the executables have been placed into the 'bin' directory.
     The total number should be the number of EXEDIRS in 'laps_root/Makefile'
     plus 2; this includes 'lapsplot.exe'.

     Lapsplot can be installed only if you have NCAR graphics.

     We recommend using Gnu Make Version 3.75 or later available via ftp from 
     any GNU site. 


                --- 2.2.4.1 Creating multiple data domains ---

     If you intend to run multiple data domains you will want to use the 
     '--datadir=/data_disk/laps/data1' option to configure when installing the
     first one (see 2.2.2 above).  Then, for each additional domain you wish 
     to create, run... 

     $ make DATAROOT=/data_disk/laps/data2 mkdatadirs

     where the subdirectory name 'data2' must be a unique name for each
     additional domain. Then follow the setup and localization steps below.

     
            ----   2.2.5  Untarring the geography databases  ---

     Next untar the 'laps_terrain.tar.gz' file anywhere that is convenient
     on your machine.

     The terrain data files come in compressed tar files separate
     from the rest of the LAPS distribution.  There are two topography 
     databases, one in file 'laps_terrain.tar.gz', the other in our 
     'world_topo_30s' directory (see section 2.8). You can choose from either 
     database. Only one copy of the topo data is required no matter how many 
     data installations you are supporting. The paths to the three main
     subdirectories (topo_30s, topo_10m, and land_10m) are defined as
     runtime parameters within the 'nest7grid.parms' file (Sec 2.2.6). 

     The land fraction database is required for the 'land_10m' subdirectory
     and is included in the 'laps_terrain.tar.gz' file.


                --- 2.2.6   Setting Runtime Parameters ---

     Runtime parameter changes may be needed to tailor LAPS for your
     domain(s); this includes ingest and geography data path names, 
     grid dimension, grid location, and potentially other aspects of the 
     data processing. These changes should be made prior to running the 
     localization. The parameter files are 'data/static/nest7grid.parms',
     'data/static/*.nl', and 'data/static/*/*.parms'. These should be emplaced
     and/or modified within each 'dataroot' directory tree prior to running 
     the localization. More details on 'nest7grid.parms' and other parameter 
     files are discussed in subsequent parts of Section 2. 

     In most cases, you can simply edit the parameter files that are already
     there to tailor LAPS for your domain.

     If you are working in a separated data directory, you have the option
     of setting up those runtime parameter files with only those parameters 
     that are unique to the domain(s) (e.g. map projection parameters,
     data paths). The remaining parameters are automatically merged in from
     the 'laps_root/data/static' directory tree by the localization script. 
     As an example, 'nest7grid.parms' only needs to contain the subset of 
     parameters that are unique to your domain(s). The rest can be 
     omitted from the file; they are automatically added in as a result of 
     the merging operation performed within the localization (next step).
     This "template" procedure provides an end result equivalent to that 
     from the previous paragraph and is described to provide an alternative
     method of modifying the parameters.


                ----   2.2.7  Running the Localization ---

     Finally, you can create the static data files and look up tables specific 
     to the domain(s) you have defined in 'data/static/nest7grid.parms' and 
     other runtime parameter files. Shown below is an example of running the 
     localization for a particular laps domain. This should be repeated for
     each domain if there is more than one. 

     $ cd (laps_root)/etc
     $ perl laps_localization.pl --dataroot=/data_disk/laps/data 

     The localization involves several operations.  The parameter files are 
     merged/updated with the repository versions if needed. The dimensions
     in the 'cdl' files are also adjusted. Then several executable programs are
     run including 'gridgen_model.exe' and 'gensfclut.exe' as per section 3.1.

                  ---  2.3    Raw data ingest   ---

     There is a layer of "raw" data ingest code that may have to be modified
     for the individual location depending on data formats. This is usually
     the largest task within the porting of the LAPS code. The supported
     component of the LAPS code is the analysis section. Ingest code is
     supported only if your raw data looks has the same configuration and
     format as FSL's raw data. It is the reponsibility of the LAPS user to 
     modify the LAPS ingest code if necessary to generate the intermediate 
     data files that are inputs to the analysis code. 

     A flow chart for the ingest processes may be found at
     'http://laps.fsl.noaa.gov/wharton/slide1.html'.

     The default LAPS ingest code obtains "raw" data from the FSL NIMBUS 
     system. The raw data can either be in ASCII, NetCDF (as point data), or
     NetCDF (as gridded data - generally not on the LAPS grid). Note that the 
     ingest code is also generally compatable with raw SBN/NOAAPORT data as 
     stored in NetCDF files on the WFO-Advanced system. The ingest code 
     processes the raw data and outputs the LAPS "intermediate" data files. 
     The intermediate files are generally in ASCII for point data and 
     NetCDF format for gridded data that have now been remapped onto the LAPS 
     grid. Most ingest code is located under the 'src/ingest directory'. When 
     NetCDf format is used for the raw data, a cdl file for the raw data is 
     sometimes included in the source code directory.
  
     Depending on the data source, you may generally prefer one of two choices:
         1) Modify LAPS ingest code to accept your own raw data format, all
            that really counts is producing an intermediate data file. 
            Generating a raw data output is not needed.
         2) Convert your raw data to NetCDF format then run the LAPS ingest
            code as is.

     You may note the following data sources used at FSL. These data sources
     are what the FSL ingest code is tailored to for producing intermediate
     data files. Note that LAPS will still run even if some of the data sources
     are withheld, albeit in degraded fashion. 

     The pathnames for most of the ingest data sources are assigned within
     the './data/static/nest7grid.parms' files and can be set accordingly at 
     runtime.

     Sfc Obs (lso): FSL uses this data in FSL's NIMBUS NetCDF format as input.
           The FSL code is in the '.../src/ingest/sao' directory, and
           includes routines to read and format different surface data
           (METAR, local data, buoy [under development]).  Outside users will 
           need to modify/write the necessary routines to read their data 
           formats to be able to output the ASCII LSO file. Paths to the data 
           are set in the 'surface_obs.inc' file. Looking at the routines in 
           the '.../src/ingest/sao' directory should provide enough 
           information to get you started.  Direct questions about surface 
           data to Pete Stamus (stamus@fsl.noaa.gov).

     Satellite Image Ingest (lvd): GOES-8 or GOES-9 data ingest. Data stored at
           FSL in NetCDF or SBN data (also in netcdf). Ingest of Air Force 
           Weather Agency (AFWA) satellite data is also possible.  Raw GVAR 
           satellite data can be ingest and navigated using GIMLOC routines.  
           Further details can be found in subdirectory 
           'src/ingest/satellite/lvd'. Another option under development is to 
           use flat files (ascii files generated by RAMSDIS or binary data) as
           input. The flat file ingest is still under development as of 3-11-98.

     Satellite Sounder Ingest (lsr): GOES-8 and GOES-9 satellite sounder data 
           ingest. Program lsr_driver.exe processes data from both satellites.
           Product files are yyjjjhhmm.lsr and stored in subdirectories 
           lapsprd/lsr/'satid'. Nineteen channels. Output is Radiance. The 
           namelist data/static/sat_sounder.nl defines the appropriate 
           parameters for this ingest process. Only the moisture analysis is 
           using this product. Currently FSL /public sounder files in netCDF 
           format are processed.

     PIREPS (pin) - We are ingesting FSL NetCDF pirep files to translate the 
           cloud layers from voice pireps into intermediate "PIN" files.

     ACARS (pin) - We are ingesting FSL NetCDF ACARS files to translate the 
           wind obs and append them to our intermediate "PIN" file.

     Profilers/RASS (pro/lrs) - These are obtained from FSL's NIMBUS database
           in NetCDF format where they are stored in 4 different directories. 
           These data come in turn from FSL's demonstration division from
           two main networks. The 30+ WPDN profiler network is located mostly 
           in the central U.S. We are also using a network of experimental 
           boundary (NOAAnet) layer profilers for both wind and temperature. 
           The profiler data for wind goes into the 'pro' file, and RASS 
           temperature profiles go into the 'lrs' file. To summarize...
<pre>
                      Network            file        frequency
                      -------            ----        ---------
                    WPDN wind            PRO          404 MHz
                    WPDN RASS            LRS
                    NOAAnet wind         PRO          915 MHz
                    NOAAnet RASS         LRS
</pre>                 

     Radar VAD Algorithm winds (pro)

     RAOBs (snd):
           FSL NIMBUS database. 

     Model first guess (lga): 
           RUC grids are ftp'ed from NMC to FSL, then converted at FSL from 
           GRIB to NetCDF. This NetCDF file is the input for the LAPS ingest
           process that writes "lga". 

           You might wish to check the following URLs on the WWW for...

           more RUC info:  'http://maps.fsl.noaa.gov/MAPS.rucinfo.cgi'
           more GRIB info: 'http://sslab.colorado.edu:2222/datastandards.html'

           RUC is also available from UNIDATA and distributed to universities 
           through private companies like Alden. 

           The conversion from GRIB to NetCDF is done by FSL's facility 
           division (NIMBUS). You may wish to contact them for more info. 
           The Atlanta, Sterling, and Seattle WFOs have followed a more direct
           route, going from the RUC/Eta to the intermediate "lga" file,
           bypassing the NetCDF file on the model grid. This includes RUC
           on isobaric surfaces. Pete Stamus (FSL) would have 
           more info on this.

     Further information on specific LAPS ingest processes for the various 
     data sources is found in Section 3 of this README.

                       ----   2.3.1  Radar ingest ---

     The following are intermediate files for various forms of radar
     data. These may have already been pre-processed (remapped) from "raw" 
     data, and at this stage are in Cartesian format on the LAPS grid.

<pre>

           (vrc)                 - low-level reflectivity from single or 
                                   multiple radars. For example, our ingest 
                                   at FSL processes WSI-NOWRAD, stored at FSL 
                                   in NetCDF, to create the 'vrc' intermediate 
                                   file.

           (v01, v02, ... )      - WSR-88Ds or other radar data stored as
                                   a full volume in sparse arrays.

                                 - each 'vxx' file has 3-d reflectivity,
                                   velocity, and nyquist velocity for a radar.
                                   multiple 'vxx' files are allowed and are
                                   especially useful for velocity.

           (vrz)                 - 3-D reflectivity mosaic from multiple radars
                                   ('vxx' files). This file has horizontal and 
                                   vertical gaps filled in.

           (ln3)                 - Layer reflectivity and echo tops, from a
                                   single radar or mosaiced from multiple 
                                   radars. For example, WSI sends put a variety
                                   of derived products from the WSR-88D's 
                                   which we call nexrad products. These 
                                   include 3 layer reflectivity products, 
                                   a composite reflectivity, echo tops, and 
                                   vil.  FD also decodes these and writes 
                                   netCDF files. We have an experimental 
                                   process called 'ln3' that ingests these 
                                   data that we haven't yet approved for 
                                   release in our tar. This will probably 
                                   happen shortly though as the need 
                                   to further test/use this 3D reflectivity in
                                   LAPS is increasing.
				   As of 9-22-98 we have committed the ln3 ingest
				   process to our repository and distribute this
				   source code with our tarfile.  The reliability
				   of echo tops in conjunction with the layer
                                   reflecitivity information still makes this a
                                   problematical data set to use in the analyses.
				   Committing this source to the repository will
				   help to further investigate the utility of this
                                   product.
                                   The key fields from 'ln3' which are used
                                   in the analyses are the Layer reflectivity
                                   (0-4 km MSL, 4-8 km MSL, and >8 km MSL), as
                                   well as echo tops (MSL).
</pre>

     More details about radar data usage in LAPS are on the World Wide Web at:
     'http://laps.fsl.noaa.gov/frd/laps/albers/radar_decision_tree.txt'. This
     includes information on which types of radar data are processed via the
     various intermediate data files.

     An important thing to establish is whether your raw data is in polar 
     or Cartesian form. If polar, please take a look at the "Polar Radar Data"
     subsection in Section 3. NOWRAD / WSI (Cartesian) data is covered 
     separately within Section 3.
      

               ---  2.4  Running LAPS Analyses  ---

     LAPS runs under cron; there is a sample cron script in './util/cronfile.in'.
     Referring to this cron, you can see that once each hour (or other cycle 
     time), the main './etc/sched.pl' runs. As an example at FSL, we run the 
     'sched.pl' hourly at :20 after the top of the hour. By inspecting the 
     'sched.pl' file you can see the various executables that are run in a 
     certain order. You might want to modify the 'sched.pl' file for your 
     needs.

     In the sample cron script several ingest processes are run separately
     from the 'sched.pl'. For example the satellite ingest (lvd) is run 
     several times per hour and utilizes './etc/laps_driver.pl'. NOWRAD 
     Radar ingest (vrc) is also run at more frequent intervals. You might also
     choose to run 'remap_polar_netcdf.exe' for radar ingest in this manner.

     On many unix systems jobs that run in cron do not have access to the 
     environment defined by the user. They instead they use a system default 
     environment defined in '/etc/profile'; thus 'perl' may not be in the path.
     Specifying the full path to 'perl' in your cron ensures that this will 
     not be a problem. Each script in the cron requires the path to laps 
     as a command line argument. A second optional argument specifies the path
     to the laps data directory structure; this path defaults to 
     '/fullpathto/laps/data' if not provided.

               ----   2.4.1  Purging Output Files ---

     The script '/etc/purger.pl' purges the 'lapsprd' output files and
     is in turn run by the 'sched.pl'. There are default settings in place for
     the number of files and age of files to be kept. These can be overridden
     in three ways. 

     1) The 'sched.pl' command line options '-r -m NN', where 
        "NN" is the number of files to be kept can control the purger.

     2) Overrides can be read in from '/data/static/purger.dat'. You can see 
        the 'purger.pl' script to see how that information is used.
 
     3) Simply edit the 'purger.pl' to change it accordingly.

               ---  2.5  Test data case  ---

     Tar files containing test data are available that contain successive runs
     of laps data on the Colorado domain (intermediate files from the 'ingest' 
     code plus outputs from the 'analysis' code). Several consecutive analysis
     cycles are posted, one file per cycle. Included are the contents of the 
     'lapsprd', 'time', 'static', and 'log' subdirectories under 'data'. The 
     log files are useful for diagnosing any differences in output you may 
     observe. The contents of the various directories are outlined elsewhere in
     this README file. The data was created using the latest software release.
     Our users can download this data at 
     'http://laps.fsl.noaa.gov/frd-bin/LAPS_SOFTWARE.cgi'.

     If you want to test the localization procedure, make sure the paths
     to the geography data are correct in 'data/static/nest7grid.parms'.

     You might initiate individual executables (bin directory) listed in the 
     'sched.pl' to run for the test data using the time supplied in the
     'data/time/systime.dat and c_time.dat'. Note that for any given process
     or set of processes, deviations from the FSL output may be caused by
     differences in the inputs as well as machine roundoff error. Any such 
     differences can be tracked down by recompiling specific analyses with 
     the '-g' option. This can be done by typing 'make debug' in the 
     appropriate directories. Various debuggers can then be used such as 'dbx'.
     Examination of the log files again is helpful.

     When running LAPS as a whole for the archived data, the 'etc/sched.pl' 
     script can be used with the -t command line argument. The value
     should be the number of seconds since 0000UTC Jan 1, 1970. This is
     also the value found in line 2 of 'data/time/c_time.dat'. 

                ----  2.5.1  Analysis Only Test ---

     You may want to check that any analysis outputs from this time are not 
     present, leaving only the 'ingest' outputs in place. This may improve
     the results of comparisons of your own output with FSL analysis output, 
     though this step is not always necessary. You might consider commenting 
     the ingest processes from the 'sched.pl' for this test, since the ingest 
     outputs (i.e. analysis inputs) will already be present.

     One way to supply the analysis inputs is as follows for each input (taken
     from a list of ingest outputs, see section 3.2):

     $cp testdata/lapsprd/input1/*           data/lapsprd/lapsprd/input1

                                   OR

     $cd data/lapsprd
     $ln -s testdata/lapsprd/input1/*        input1


                ----  2.5.2  Ingest + Analysis Test ---

     Note that the 'lapsdata*' tar files contain intermediate plus analysis
     output files only. We also have 'rawdata*' tar files that supply
     some of the "raw" data that are inputted to the ingest processes.
     The times for the raw data match the 'lapsdata*' output approximately but
     not always exactly. In many cases, a user would independently generate 
     the intermediate data files (ingest output) and could then compare them 
     with ours. If other "raw" files are needed as they appear on FSL's NIMBUS 
     system, they can be obtained directly from FSL's facility division at 
     'http://www-fd.fsl.noaa.gov/'.

               ---  2.6  Modifying Compiler Flags       ---

     The 'configure' script automatically modifies the compilation 
     flags by modifying 'src/include/makefile.inc' according to what type of 
     platform you are on. Hopefully the flags will work OK on your particular
     platform. If you want to change the flags from the default set, you 
     can provide command line arguments to the 'configure' script.
     For more information on passing in command line flags to 'configure' run
     $ ./configure --help

     A second method of modifying the flags is to edit 
     'src/include/makefile.inc'. If you find that the default compiler flags 
     don't work for your platform or that your platform has no default, you'll
     need to experiment to find the right set of flags.  Experiment (after 
     running 'configure') in 'src/include/makefile.inc' as this will 
     automatically control the flags used throughout laps. If you find flags 
     that work for your platform and would like us to add them to the defaults
     in 'configure' please let us know via e-mail. Some examples based on
     our experience are shown as follows...

     For SGI platforms, certain flags may be needed. '-mips3' seems to help
     on IRIX64 v6.2.

---------------- 2.7 ------ I/O of LAPS gridded files -------------------------

     Once the laps library is compiled (as outlined above), laps grids can
     be read. There are three levels of software that can access the data.
<pre>
     1. Lowest Level - NetCDF c routine calls (not recommended unless you're
                                               a NetCDF hacker)

     2. Medium Level - READ_LAPS_DATA - look at the source code in 
        lib/readlapsdata.f for the arguments.

     3. Highest (and easiest) level - get_laps_3d or get_laps_2d. The source
        is contained in src/lib/laps_io.f. The various grids available are
        listed later in this README file under the heading "NetCDF organization"
</pre>
     To link to the reading routines, you will want to link to:

     laps/src/lib/liblaps.a
     libnetcdf.a


-------------- 2.8 ----  CHANGING THE HORIZONTAL DOMAIN-----------------------

     Laps will allow you to change the horizontal domain after compilation
     and before the running of the localization script. Below is a list of 
     the relevant changes.

                ----  2.8.1 Number of Grid Points ---

     Adjust the horizontal dimensions (NX_L, NY_L) in 
                                              './data/static/nest7grid.parms'.


     NOTE: The file './data/static/nest7grid.cdl' is now automatically edited
           by ./etc/laps_localization.pl using the values found in 
           './data/static/nest7grid.parms'.


          ----  2.8.2 Location of Domain (Map projections) ---

     The location of the horizontal domain can now be changed at run time. 
     Simply change the lat/lon values in 'data/static/nest7grid.parms'
     and run the './etc/laps_localization.pl' script. This script in turn
     runs 'gridgen_model.exe' and other programs.

        Prior to running 'laps_localization.pl', set the following parameters
        in 'data/static/nest7grid.parms' (needed only if you are outside 
        the default Colorado domain).

<pre>
                      
        1) Modify the 'grid_spacing_m_cmn' parameter (only if you are not 
                using the default 10000m for the grid spacing).
                 
        2) Modify the 'grid_cen_lat_cmn' and 'grid_cen_lon_cmn' parameters.
             
        3) c6_maproj:
                
                Polar stereographic: 
                    Set to 'plrstr'. 

                Lambert Conformal:
                    Set to 'lambrt'.

                Mercator:
                    Set to 'merctr'.

                See the note below regarding current map projection limitations.
                
        4) standard_longitude:
                        
                Polar Stereographic:
                    This defines the longitude which is straight up and down 
                    (parallel to the "y" axis) in the map projection.
               
                Lambert Conformal:
                    This defines the longitude which is straight up and down 
                    (parallel to the "y" axis) in the map projection.
                  
                Mercator:
                    N/A
                                       
        5) standard_latitude:
                                         
                Polar Stereographic:
                    This parameter is often set to +/-90 degrees to match
                    the location of the projection pole, given that the 
                    projection pole is at one of earth's geographic poles. 
                    The actual grid spacing (measured on the earth's surface)
                    matches the 'grid_spacing_m_cmn' parameter at the 
                    projection pole, which may or may not be located within 
                    your domain. For domains distant from the projection pole,
                    the actual grid spacing inside the domain becomes 
                    noticeably less. The value of 'grid_spacing_m_cmn' can be 
                    increased to compensate.
                    
                    When the projection pole is at a geographic pole, 
                    'standard_latitude' can be set to values other than +/-90.
                    The 'grid_spacing_m_cmn' parameter then represents the 
                    true grid spacing (measured on the earth's surface) at a 
                    latitude of 'standard_latitude'. 
                     
                    Consider the angle 'psi' which is the angular distance from
                    the pole of the projection. 'phi' = 90 - 'psi'. The map
                    factor 'sigma' is (1+sin(phi0))/(1+sin(phi)) and becomes
                    unity when 'phi' for a particular grid point is equal to 
                    'phi0'. This occurs when you are located at the 
                    'standard_latitude' for the case of a "secant" projection.
                    Note that the grid spacing for a particular location in
                    the domain is equal to 'grid_spacing_m_cmn'/'sigma'.

                     
                    Example 1: grid_spacing_m_cmn = 10000.
                               standard_latitude  =   +90.
                               standard_latitude2 =   +90.
                               grid_cen_lat_cmn   =   +40.
                   
                               grid_spacing at projection (north) pole = 10km
                               grid_spacing at domain center (+40)     ~  8km
                                                    
                     
                    Example 2: grid_spacing_m_cmn = 10000.
                               standard_latitude  =   +40.
                               standard_latitude2 =   +90.
                               grid_cen_lat_cmn   =   +40.
                     
                               grid_spacing at projection (north) pole ~ 12km
                               grid_spacing at domain center (+40)     = 10km
                                                     
                    Example 3: grid_spacing_m_cmn = 10000.
                               standard_latitude  =   -90.
                               standard_latitude2 =   -90.
                               grid_cen_lat_cmn   =   +40.
                          
                               grid_spacing at projection (south) pole = 10km
                               grid_spacing at domain center (-40)     ~  8km
                     
                    Example 4: grid_spacing_m_cmn = 10000.
                               standard_latitude  =   -40.
                               standard_latitude2 =   -90.
                               grid_cen_lat_cmn   =   -40.
                        
                               grid_spacing at projection (south) pole ~ 12km
                               grid_spacing at domain center (-40)     = 10km
                                                                
                         
                Lambert:
                    This is the latitude at which the grid spacing is exactly 
                    the nominal value (e.g. 10km). 
                   
                Mercator:
                    This is the latitude at which the grid spacing is exactly 
                    the nominal value (e.g. 10km). 
                                     
        6) standard_latitude2:
             
                Polar Stereographic:
                    This must be set to +90. or -90. and defines the pole 
                    latitude of the polar stereographic projection 
                    (Earth's North or South Pole). 

                Lambert:
                    For a tangent lambert (e.g. CONUS), set this equal to
                    the 'standard_latitude' parameter. For a secant 
                    (two-latitude) lambert, set this to the second true 
                    latitude.

                Mercator:
                    N/A


</pre>

        When you run ./etc/laps_localization.pl, the NetCDF static 
        file 'static.nest7grid' will be automatically generated by process
        'gridgen_model.exe'. This contains grids of latitude, longitude, 
        elevation, and land (vs. water) fraction.

        The following error message, "FILE /U50N119W DOES NOT EXIST",
        does not necessarily mean there is a problem. It signifies that 
        your domain runs outside the available 30" data, and should still be 
        covered by the 10' worldwide data, if available.

                MAP PROJECTION FUNCTIONALITY / LIMITATIONS

     LAPS runs with the polar stereographic, lambert, and mercator projections.
   Please let us know if you encounter any problems.

     The polar stereographic projection has a pole that may be set to either
   earth's north or south geographic poles. 

     Setting the pole to an arbitrary lat/lon (local stereographic) is a
   possible future enhancement. A test local stereographic domain gave an 
   error of 2km in the grid points. Addressing this may include converting 
   library subroutines 'GETOPS' and possibly 'PSTOGE' to double precision.
   The projection rotation routine 'projrot_laps' also has some approximations
   when local stereographic is used.

                   ----  2.8.3 Domain Resolution  ---

     The default value is 10000m. This is one of the items used in 
   constructing the static file (see above). To date, we have run LAPS with
   resolutions ranging from 1000m to 48000m.


                   ----  2.8.4 Terrain Databases ---

        The './src/grid/gridgen_model.f' program normally utilizes one of
        two terrain data databases (distributed separately and available from 
        the laps www site). 

        The first database has two components; one is a worldwide 10' dataset,
        the other is 30" data and covers the continental U.S.  The software 
        automatically chooses the higher resolution data if it covers the 
        domain of interest, otherwise it defaults to the lower resolution 
        data. A ~0.2 degree wide transition zone is used for blending at 
        the boundary between the two datasets. 

        Two scenarios for processing the first database may need more testing.
        These are:

        1) Near a land/sea border
           In this case a filter that sets a given terrain point to zero
           if the absolute value of the point is less than 1 meter may
           help as a post processing step to reduce noise just off of
           the coast. 
           
        2) If you are in the vicinity of a land border of the Continental 
           United States (e.g. Southern Canada or Northern Mexico).

        The second database is a global 30" terrain dataset from USGS that we
        have reformatted here at FSL. 

                 ----  2.8.5 Terrain Smoothing/Filtering  ---

    Edit the file 'data/static/nest7grid.parms'...
<pre>
        1) silavwt_parm: 

           Default value of 0. represents the use of silhouette terrain
           which is the maximum elevation in the local area. Useful range is
           between 0-1. A value of zero uses the average terrain instead of
           the maximum. Note that a value of 1. may reduce the apparent effect
           of filtering with 'toptwvl_parm'.
           
        2) toptwvl_parm: 

           Default value is 4 represents 4 delta-x filtering of the terrain.
           You can change this to alter the smoothness of the terrain. Higher
           numbers mean smoother terrain.
</pre>
   
--------- 2.9  ----- CHANGING THE VERTICAL DOMAIN------------------------------


   NUMBER OF LEVELS:

     To do this, perform the following between untarring the tar file and
    compiling 

     1. Edit 'data/static/nest7grid.parms'
       
        Change the parameter 'nk_laps' to be equal to the (number of vertical 
        levels).

     2. Note that we have not tested laps with other than 21 vertical levels
        for quite a while.

   PRESSURE OF THE LEVELS (and vertical resolution):

     To do this, perform the following between untarring the tar file and
     compiling

     1. Edit 'data/static/nest7grid.parms'

        Change the parameter PRESSURE_BOTTOM_L to be the pressure in
        pascals of the lowest laps level (default is 110000 pa).

        Change the parameter PRESSURE_INTERVAL_L to be the vertical
        pressure resolution desired (default is 5000pa). 
 
        Update the individual pressures for each level listed in column form
        in the file.

        Note the vertical pressure interval must be constant between levels.

     2. readwritelaps.c in the library needs to be changed. Explicit mention
        is made in the code of the pressures of each level in integer 
        millibars.

-------- 2.10 ----- CHANGING THE CYCLE TIME -----------------------------------

      The default cycle time is 60 minutes. To change this, do the following.
   between untarring the tar file and compiling
 
     1. Edit runtime parameter file 'data/static/nest7grid.parms' 
        to change the value of 'laps_cycle_time'.

--------- 2.11 ------SURFACE ANALYSIS CHANGES---------------------------------

	Updated: 16 Jan 1997.  Pete Stamus (stamus@fsl.noaa.gov)

   For the laps_sfc.x (LSX) process, perform the following between untarring 
   the tar file and running the localization.

   STATIC FILES

     1. Before running the surface analysis, the surface static files will
	have to be created.  The localization script does this by running 
        'build_sfc_static.x' in  '.../static/surface'.  Two files are
	created in the '.../static/surface' directory that the surface
	analysis uses: 'pbl_top.dat' and 'drag_coef.dat'

        Note that 'build_sfc_static.x' is run *after* the 'static.nest7grid'
	file (located in '.../data/static' and containing latitude, 
	longitude, and elevation for the domain) is created for your location.
        Both are run within the localization script.

     2. In 'build_sfc_static', the friction parameter has been configured
	by automatically producing a scaling factor based on the range of
	elevations across the domain.  This factor can be changed in the
	'drag_coef' section of 'build_sfc_static', if so desired.  More 
	details on this might be had from Pete Stamus (stamus@fsl.noaa.gov).

   QUALITY CONTROL

     1. A still fairly simple quality control is included in the surface
	package.  If you wish to skip over this step, you can change 
    	the 'laps_sfc.inc' file in '.../source/sfc' prior to compilation of 
        the surface analysis by the localization script (or recompilation
	by hand at a later date).

   PRESSURE REDUCTION

     1. You will need to select an elevation for the reduced pressure analysis.
	The reduced pressure is the only one really used in the variational
	portion of LAPS, and the idea is to select an elevation that is 
	representative of the domain (or portion of the domain) you are
	interested in.  For example, the Colorado LAPS domain includes 4000m
	high mountains over the western 1/3, and plains that slope below 
	1000m at the eastern boundary.  We use 1500m as the Colorado LAPS
	reduced pressure.  This is close to the elevations over the eastern
	2/3's of the domain, and requires a smaller reduction over the mountins
	compared to MSL, for example.  Change the variable in 'laps_sfc.inc'
	in the '../source/sfc' directory before compilation.

   SURFACE THETA CHECK	

     1. In 'laps_sfc.inc', set the 'itheta' flag for the surface theta
	check.  This check adjusts the surface potential temperatures so
	they are not greater than the potential temperature at an upper 
	level.  Set this variable equal to the desired upper level (or if
	you don't want to do this check):

	                0 = No sfc theta check done
	                7 = Use 700 mb level
	                5 = Use 500 mb level

	Recommended:  Use 700 mb most places, 500 mb over higher terrain 
	areas (like Colorado).


 ----- 2.12 ----------LQ3 (HUMIDITY ANALYSIS) CHANGES---------------------

Major Updates (from most recent to oldest mods)
Last updated: October 1996 by Daniel Birkenheuer

February 1997:

  The moisture_switch.txt file was refashioned to a NAMELIST called
  moisture_switch.nl.  This files contents are basically the same as 
  the .txt file except with a slight change in format.  It can be hand
  edited to configure the operation of the moisture analysis if needed.

April 1997:

  On the 15th of April an upgrade to enable the moisture analysis to
  process GOES sounder data was deemed ready for export.  Though this
  module has not yet been tested with sounder data since that particular
  data interface will not be ready for approximately another month, the
  code is ready to accept the data when available.

  The main impact to our users is that the moisture switch file under LAPS
  static must be adjusted to take advantage of this feature.  For the time
  being the new switch should be (0).  Later when sounder data is routinely
  available and this module has been checked out, it can be set to (1).
  This is now the 4th switch in the moisture_switch file.

October 1996:

   Added a switch for enabling cloud data to be used in saturating the air
   in cloudy areas. This is included as the last item in the
   moisture_switch.txt file that is maintained under the static area.  To
   enable cloud data for saturating the air this is (1) to disable the
   feature, set the character to (0).

   You might wonder why we need such a switch.  During October we
   experienced problems with the cloud analysis.  This was inadvertently
   causing problems in the moisture analysis through the cloud saturation
   adjustment.  The incorrect moisture was in turn causing the models to
   blow up.  Hence we added this switch so that we could easily reactivate
   the feature once the cloud analysis was repaired without having to worry
   about recompiling any code.

August 1996:

   Satellite sounding processing was reestablished in the LAPS moisture
   processing adapting to the GOES-I series data.  At this time, a journal
   article is in preparation to fully document this aspect of the analysis.
   Until this is formally published, a brief summary of the
   moisture/satellite algorithm is provided at the end of this section.

   You have the option of running this portion of the software without
   having to do anything to the code itself.  If you wish to run this code,
   you will need LVD files (LAPS satellite data files).  In addition you
   need to verify the SECOND record of the ASCII file
   ./data/static/moisture_switch.txt contains the numeral 8 or 9.  The
   numeral 8 signifies to use the GOES-8 coefficients in the forward model,
   a numeral 9 will cause the software to use the GOES-9 coefficients in
   the forward model.  It is currently imperative for the user to set this
   parameter.  Unfortunately, at the time of this writing, the SBN data
   stream does not contain an indicator of which satellite is used to fill
   the CONUS frames, therefore the user needs to supply this information
   and this is the way to do it.

   If you wish to disable the satellite usage, you merely need to edit the
   "switch" file to contain the numeral 0 as its second record.  Further
   documentation on what to do is contained at the end of the ASCII file.
   It should also be noted that the LVD files MUST contain simultaneous
   data from 6.7, 11, and 12 microns for this algorithm to work.  If one or
   more bands are lacking the algorithm will gracefully fail.



June 1996

   Included the capability to ingest RAOB data into the moisture module.
   There are two important items to know about:

   (1) The RAOB data are contained in lapsprd/snd/*.snd files.  The
   moisture module will automatically use .snd data if present.  If you do
   not wish to use sounding data there are 2 ways to exclude these data,
   the most obvious is to not provide .snd files.

   (2) In the event that you wish to exclude the use of sounding data and
   want them to be present in the data directory (possibly for some other
   application) you can avoid using them in the moisture code by modifying
   the file:
   ./data/static/moisture_switch.txt

   The first record of this ASCII file is used for the RAOB data inclusion.
   The file itself is documented internally following the second record.
   If the first record is "1" (nominal case), the use of sounding data will
   be on, and .snd files will be processed if present.  If this character
   is "0", the moisture code will not process sounding data.  Note that
   this ASCII file is now used for other purposes and that its name has
   been modified to be more generic (it was formerly used only for RAOB
   data and named raob_moisture_switch.txt).

April 1996

   Radiometer data is currently unavailable from this laboratory.  The old
   path to the data was addressed in this humidity include file:

   ./nest7grid/source/humid/get_rad.inc

   path to radiometer data (not a laps file)

   This include file will be removed if and when the prospects of acquiring
   radiometer data are forever lost.  For now treat this as orphan code, if
   ignored, it will not cause problems.

------ 2.13 -------------LVD (SATELLITE INGEST) CHANGES------------------------

   There may be some parameters in the satellite code that change when 
   the domain is moved. The latest info documented in the file
   './src/ingest/satellite/lvd/README'. Please contact John Smart 
   (smart@fsl.noaa.gov) for more details. 

------ 2.14 ----------------OTHER RUNTIME PARAMETERS---------------------------

   It is worthwhile to check the 'nest7grid.parms' and other namelist
   files in data/static to make sure all the runtime parameters are
   correct. Some parameters worth noting are:

<pre>

   nest7grid.parms
   _______________

   c8_project_common - Depends on which "realization" of LAPS you are running.
                       Allowed values are 'NIMBUS', 'WFOADV', 'AFGWC', 'RSA'.
                       This is currently used by the WPDN wind profiler ingest
                       software.



   cloud.nl
   ________

   l_use_vis -         Boolean set to indicate whether we are confident in the
                       calibration of the visible satellite data and albedo
                       fields for use in the cloud analysis. This is normally 
                       set to .true. at FSL and .false. for WFO and other 
                       ports unless we are confident in the vis data 
                       normalization.
</pre>

------ 2.15 -----Detecting and Reporting Installation Errors-------------------

   To determine how well LAPS was installed, verify that all (35 at last check)
   executables were built OK ('bin' directory) with no errors in the output 
   of 'make'.

   Similarly, check the output of the localization script.

   Check if output is being generated in the various 'lapsprd' subdirectories.
   A Web based monitor might be useful here. Examples of these are at:

       "http://laps.fsl.noaa.gov/~jedwards/Laps_Monitor.cgi"
       "http://fics.fsl.noaa.gov:4267/PRODS/LapsComparison.shtml"

   Check the log files in the 'log' directory for occurrences of errors and 
   warnings. The errors are generally more significant.
   
   If you have any problems during the configure, install and localization
   process, first check this README file and the FAQ available at the
   http://laps.fsl.noaa.gov/frd/laps/birk/LAPS_FACTS.htm URL. Also check the
   release notes at the http://laps.fsl.noaa.gov/software/release_notes.html
   URL.
   If you don't find the answer in these documents, send mail to 
   laps-bugs@fsl.noaa.gov   Include in your mail:
<pre>
   The type of system (often, uname -a)
   The system limits (ulimit -a)
   The applicable compiler versions (often a -v or -V option to the compiler)
   The entire output of configure 
   The entire output of make (standard output + error output)
   The entire output of laps_localization.pl (i.e. make localize)
</pre>

---------- 3.0 ---- DESCRIPTION OF LAPS PROCESSES  ---------------------------

       The following section contains information on which LAPS processes 
   generate which LAPS output products. Static data (like lat and lon  
   grids) are included in section 3.1. These are the processes contained 
   within the LAPS tar file and built with the localization script.

          "Inter data" is an ascii file containing non-gridded data 
   (intermediate data files). Examples of this are surface obs, profiler obs, 
   etc.

          This list contains all outputs generated by LAPS processes.

          The products listed under each process are the outputs produced by 
   that process. Inputs are listed here for some analyses, if the schedule.com
   is run according to the flow therein, the necessary inputs will be 
   available. 

------- 3.1  ---------------  Localization Processes-----------------------

------ 3.1.1 ------ Gridgen_model (static.nest7grid generation) ---------------

Package: gridgen_model.exe - Writes static file, run by localization script. 
                                 (contact: Steve Albers - albers@fsl.noaa.gov).

Inputs:
	Geography databases (topography, land fraction)
        static/nest7grid.parms

<pre>
Outputs:
	static/static.nest7grid   NetCDF grid   geography data mapped to LAPS 
                                                grid
                                   
                                    'LAT'       latitude in degrees
                                    'LON'       longitude in degrees
                                    'AVE'       mean elevation MSL
                                    'LDF'       land fraction (0=water,1=land)
                                    'USE'       soil type (under development)

        static/latlon.dat         Binary grid   latitude
                                                longitude

        static/topo.dat           Binary grid   mean elevation

        static/corners.dat        ASCII         lat/lon of 4 corner points
</pre>

Source directory: laps/src/grid

Sample Output: Should be available in the test data case. The grids start with
               gridpoint (1,1) in southwest corner of the domain and end with 
               gridpoint (ni,nj) in the northeast corner. The bottom 
               (southernmost) row of the domain is written first (I increases 
               with consecutive grid points, then J increases). I increases as
               you're moving east on the grid, J increases as you're moving 
               north.


------- 3.2  ------------------  Ingest Processes ---------------------------

As mentioned above, a flow chart for the ingest processes may be found at
'http://laps.fsl.noaa.gov/wharton/slide1.html'.

------ 3.2.1 -------------------- LGA Model ---------------------------------

Package: lga.exe - ingest model data (contact: Jim Edwards - jedwards@fsl.noaa.gov).

        LGA 	LAPS analysis grids from RUC or other analysis/forecast grids.

Inputs:
	Model data in NetCDF (NIMBUS CDL) on the model's native grid.

Outputs: (Feeds various analyses)
	lga	grid	model data analysis/forecast

------ 3.2.2 -------------------- LVD ----------------------------------------

LVD process - lvd_sat_ingest.exe - takes raw sat. data and puts it on LAPS 
              grid.
        (author: John Smart - smart@fsl.noaa.gov)

Input:
 	 GOES 8 or GOES 9 Data

Output:
         LVD/"SATID"	grid	LAPS satellite data file
			`	SATID currently can be either goes08 or goes09

------ 3.2.3 --- Polar Radar Data (e.g. WSR 88D Level II, Level III) ---

Process: remap_polar_netcdf.exe 

Author: Steve Albers (albers@fsl.noaa.gov)

Every volume scan
Initiation: Completion of volume scan

Inputs:
	Wideband Radar Data (reflectivity and velocity in polar coordinates,
        in NetCDF format, one file per tilt). This can for example 
        be obtained from a WSR 88-D Level-II data feed. 
        A description of how
        we obtain these Polar NetCDF files for Level-II is at 
        'http://laps.fsl.noaa.gov/frd/laps/albers/remapper_raw.html'.

        Note that narrowband data (e.g. WSR 88D Level-III RPG)
        can also be used as long as 
        it is converted to the required polar coordinate, NetCDF format. 
        This is in fact being done for the AWIPS 4.2 implementation of LAPS for
        a low-level tilt from a single radar.

Outputs (LAPS intermediate files - depending on input parameters):
<pre>
     v01         grids       3-D Radar reflectivity, velocity, and Nyquist vel
     v02           "                  "
     rdr/xxx/vrc   "         2-D Radar reflectivity
     vrc           "                  "
     etc. (for each radar)
</pre>

The outputs from this process, on the Cartesian LAPS grid,  are used by the 
LAPS wind analysis, and also potentially by cloud and precip accumulation 
analyses. One output file is written per volume scan.

When running the remapper, files such as v01, v02, vrc, etc. are produced 
depending on which radar is being used and on the input parameters. 
A further description of how the remapper software functions may be found on 
the World Wide Web at 
'http://laps.fsl.noaa.gov/frd/laps/albers/remapper_laps.html'.

Source directory: The source code for this is in 'src/ingest/radar/remap'.

Sample Input/Output: May be available in the test data case.

------ 3.2.4 -------- WSI / NOWRAD RADAR PREPROCESSING (VRC) ------------------

Process: VRC (vrc_driver.x) 

Author John Smart (smart@fsl.noaa.gov)

<pre>
Inputs:
        Raw WSI NOWRAD radar reflectivity data
        v01, v02, etc.                        3-D reflectivity  (proposed)

Outputs (Intermediate data file):
        vrc     grid                          2-D reflectivity
        vrz     grid                          3-D reflectivity  (proposed)
</pre>

The WSI data are decoded by our Facilities Division and written as
netCDF files. The vrc_driver.x process reads these netCDF files.
WSI sends out many types of radar data. We use the files
that are labeled "_hd" (15 min freq). They also send out an "_hf"
(5 min freq) file.  We use hd because WSI hand edits these for
ground clutter. The hf files are not edited. The hd and hf files
are composites of "low-level" elevation scans from the 88D's around
the country.  The vrc_driver.x also maps from conus to laps domain
for the wfo data set.  The map transformation software is found in
lib/gridconv, lib/nav, and lib/radar/wsi_ingest. The switch to use
wsi versus wfo in variable c_raddat_type in nest7grid.parms. Pathway
to data is variable path_to_wsi_2d_radar_cmn in nest7grid.parms.

The output reflectivity is used by the cloud and precip accumulation analyses.
                                        
------ 3.2.5 --------------- Radar Mosaic (Under development) ----------------

Process: (mosaic_radar.exe) 

Author John Smart (smart@fsl.noaa.gov)

<pre>
Inputs:
        v01, v02, etc.                        3-D reflectivity  

Outputs (Intermediate data file):
        vrc     grid                          2-D reflectivity
        vrz     grid                          3-D reflectivity  
</pre>


The output reflectivity is used by the cloud and precip accumulation analyses.
                                        
------ 3.2.6 ---------------- PROFILER/VAD (PRO) Ingest ----------------------

Process: PRO (ingest_pro.exe) LAPS Wind Profile Ingest 

Author: Steve Albers (albers@fsl.noaa.gov)

<pre>
Inputs: (located in two separate NetCDF directories)
	WPDN 404-MHz profiler wind data in netCDF format 
            NetCDF CDLs from both FSL-NIMBUS and WFO-Advanced are accepted. 

	Boundary layer 915-MHz profiler wind data in netCDF format
            NetCDF CDL from FSL-NIMBUS. 

	Doppler Radar VADs in NetCDF (FSL-NIMBUS CDL) format

Output: (feeds wind)
	pro	inter data	wind profile direction (degrees) and
                                              speed     (meters/sec)  (ASCII)
</pre>

Source directory: laps/src/ingest/profiler

Sample Input/Output: Should be available in the test data case.

 
------ 3.2.7 ----------------- RASSs (LRS) Ingest -----------------------------

Process: (ingest_lrs.exe) LAPS local data RASS ingest

Author: Steve Albers (albers@fsl.noaa.gov)


<pre>
Inputs:
	WPDN RASS temperature data in netCDF format 
	Boundary layer RASS data in netCDF format 
        These are in two separate NetCDF directories (FSL-NIMBUS CDLs).

Outputs: (feeds LSX and temp.exe)
	lrs	inter data	RASS Virtual Temperatures (ASCII)
</pre>

Source directory: laps/src/ingest/rass

Sample Input/Output: Should be available in the test data case.

------ 3.2.8 ----------------- PIREPS/ACARS Ingest ----------------------------

Processes: (ingest_pirep.exe, ingest_acars.exe) LAPS Pireps / ACARS

Author: Steve Albers (albers@fsl.noaa.gov)

<pre>
Inputs:
	Aircraft voice pireps and ACARS data (separate NetCDF files
                                                              FSL-NIMBUS CDLs)

Outputs: (The two executables are run sequentially, appending to the 'pin' 
                                               file. Feeds cloud.exe, wind.exe)
	pin	inter data	voice pireps/clouds, ACARS/winds
</pre>
                                        
Sample Input/Output: Should be available in the test data case

 
------ 3.2.9 ---------------------- RAOB (SND) Ingest ------------------------

Process: (ingest_raob.exe) LAPS RAOBs

Author: Steve Albers (albers@fsl.noaa.gov)

<pre>
Inputs:
	RAOBs in NetCDF format (FSL-NIMBUS CDL)
                               (Should also work with WFO-Advanced CDL)

Outputs: (Feeds temp.exe, humid.exe, wind.exe)
	snd	inter data (ASCII)              RAOB temp, dewpoint, wind
</pre>
                                        
        Note: If you have good profiler or rass data, you may want to disable
              the RAOB ingest as they would then perhaps hurt as much as they
              help (due to raobs being relatively old). This can be done by
              using a dummy path name for the raw raob data in 
              'nest7grid.parms'.

------ 3.2.10 --------- Cloud Drift Wind (CDW) Ingest -------------------------

Process: (ingest_cloud_drift.exe) LAPS Cloud Drift Winds

Author: Steve Albers (albers@fsl.noaa.gov)

<pre>
Inputs:
	GOES 8/9 cloud drift winds in ASCII format

Outputs: (Feeds wind.exe)
	cdw	intermediate data (ASCII)       Satellte cloud drift winds
</pre>
                                        
------ 3.2.11 -------------- Surface Data Ingest ------------------------------

Process: (obs_driver.x) LAPS Surface Ingest
     (author: Pete Stamus - stamus@fsl.noaa.gov)

<pre>
Inputs:
	Surface METARS and local data in NetCDF (NIMBUS) format

Outputs: (Feeds laps_sfc.x, cloud.exe, deriv.exe, lapsplot.exe)

	lso     intermediate data (ASCII) 

</pre>

Source directory: laps/src/ingest/sao

The data within the ASCII format is fairly self explanatory if you look at our
'obs_driver' code. The lat/lon info (as in the rest of LAPS) is in decimal 
degrees.                                        

------- 3.3  -------------  ANALYSIS PROCESSES --------------------------------

------ 3.3.1 -------------------- WIND ----------------------------------------

Process: wind.exe - WIND analysis and related fields

Author: Steve Albers (albers@fsl.noaa.gov)

	Generate a preliminary analysis using SAOs, surface mesonet, profiler, 
	and aircraft reports.  Output of the blance packge from the previous
	cycle is used as a first guess to do quality control on new 
        observations. Time tendencies from the MAPS model are used both to 
        update the older (greater than cycle time) aircraft reports and to 
        advance the first guess over the LAPS cycle time.

	In a second step, the Doppler radial velocities are mixed in.  The 
        azimuthal component is estimated by using the results of the first 
        step.  Radial velocities are taken from the Doppler radars after 
        dealiasing and other quality control steps are done.
<pre>
Auxiliary functions:
	write out graphical products
		
Inputs: (from PRO, PIN, LGA/RAM, CDW)       '*' = essential input
      * lga/ram grid            model data analysis/forecast
                                needed for current and previous cycle times
	pro     inter data      profiler, VAD, SODAR winds
        snd     inter data      RAOB data including winds
	pin	inter data      pireps/clouds
        cdw     inter data      cloud drift wind
      * lso     inter data      LAPS surface obs file: mesonet & SAO

        (remapped from raw radar data)
	v01-v20 grid            3-D radar reflectivity/radial velocity 

Outputs: (LW3 is main output)
	pig	inter data	acars winds    (none of these four really have 
	prg	inter data	profiler winds  to be part of the Wind Anlysis,
	sag	inter data	SAOs             they are used for lapsplot 
	d01-d20 inter data (3d)	derived radar obs output)

	lw3	3d grid		3-D winds (U and V are wrt TRUE NORTH)
	lwm	2d grid		surface winds

</pre>                                        
Source directory: laps/src/wind
Compile-time parameters: laps/src/include/windparms.inc

CPU USAGE (SUN SPARC 10 - 4 processor): About 1 minute

Reference: Albers S. 1995: The LAPS wind analysis. Weather and Forecasting, 10,
           342-352. 

           Available at 'http://laps.fsl.noaa.gov/frd-bin/LAPB.pubs_95.cgi'


------ 3.3.2 ----------------- SFC (LSX) -------------------------------------

Surface processing - laps_sfc.x (LSX and friends) 
        (author: Pete Stamus - stamus@fsl.noaa.gov)

Surface package collects surface data - SAOs, local mesonet, GOES IR bightness.
Places surface data on LAPS grid.  Quality Control of Obs.  Also takes previous
hour's result as input.  Data is collected over a slightly larger than grid to 
help boundary conditions.  Uses a cubic spline technique for interpolation.

GOES IR gives relative temperatures, not absolute temps.  GOES tempature 
gradient fields is then interpolated together with surface observations and 
previous background, etc.  LGA 700 mb temperatures are extrapolated to the 
surface, compare it with the hard data points.  Use to account for elevation 
effects.

Constrain surface winds and pressure fields to full equations of motion.  Do an
interpolation of SAO reports and mesonet reports to get 2-D winds on surface.
re-analysize wind field based on adjusted pressure field.

Then derived fields are calculated.

For LT1 (3D temps) take 3D temps from the LGA module (orginally MAPS data)
plus LAPS surface temps and RASS, then the fields are blended.

<pre>

LSO process - obs_driver.x - Ingest surface data
        (author: Pete Stamus - stamus@fsl.noaa.gov)

Input:
	raw SAO data
	raw mesonet data

Output:
         LSO	ascii	LAPS surface obs file: mesonet & SAO
                        The format of this file may be gleaned from looking
                        at the obs_driver.x code, or by looking at sample LSO 
                        files in the test data case.



28257	LSX process - LAPS surface data analysis
        (author: Pete Stamus - stamus@fsl.noaa.gov)

Inputs:
         LSO    surface observations
	 LGA	maps data analysis
	 LSX    (previous hour's LSX)
         LRS    RASS data
         LWM    latest surface winds from 3D wind analysis

Outputs: (Feeds L1S, LBA)

 28257   LSX    LAPS surface data grids (27 packed in one file)
</pre>

------ 3.3.3 ---------------------TEMP----------------------------------------

Process: temp.exe - Temperature-Height analysis

	Generate a temperature analysis using model background, sfc temp
        analysis, and RASS data.
<pre>
Inputs: (from LGA, LSX, RAM [if available], LRS)       '*' = essential input
      * lga/ram grid            model data analysis / forecast
	lrs	inter data      RASS vertical temp profile 
        snd     inter data      RAOB data including temperatures
      * lsx     grid            LAPS surface data grids

Outputs: (LW3 used by LBA)
	lt1	3d grid		3-D temperature (K), 3-D Heights (M-MSL)
</pre>
Source directory: laps/src/temp

Reference: Albers S., J. Mcginley, D. Birkenheuer, and J. Smart 1996: The Local
           Analysis and Prediction System (LAPS): Analyses of clouds, 
           precipitation, and temperature. Weather and Forecasting, 11, 
           273-287.

           Available at 'http://laps.fsl.noaa.gov/frd-bin/LAPB.pubs_96.cgi'

------ 3.3.4 ---------------------CLOUD---------------------------------------

Process: cloud.exe - Cloud analysis package

Author: Steve Albers (albers@fsl.noaa.gov)

	Several input analyses are combined with SAOs of cloud layers.  These 
        input analyses are the 3D temperature analysis,  a three-dimensional 
        LAPS radar reflectivity analysis derived from full volumetric radar 
        data, and a cloud top analysis derived from GOES IR band eight data.

	Vertical cloud soundings from SAOs and pilot reports are analyzed 
        horizontally to generate a preliminary three-dimensional analysis.  
        This step provides information on the vertical location and 
        approximate horizontal distribution of cloud layers.

	The satellite cloud-top temperature field is converted to a cloud-top 
        height field using the three-dimensional temperature analysis.  The 
        cloud-top height field is then inserted into the preliminary cloud 
        analysis to better define the cloud-top	heights as well as to increase
        the horizontal spatial information content of the cloud analysis.  
        A set of rules is employed to resolve conflicts between SAO and
	satellite data.  Finally, the three-dimensional radar reflectivity 
        field is inserted to provide additional detail in the analysis.
<pre>
Inputs:                                          '*' = essential input
      * lsx	     grid	   LAPS surface data grids
      * lt1          grid          LAPS 3-d temperature/height grid

      * vrc/v01/vrz  grid          2-D or 3-D radar reflectivity	

        lvd          grid          Infra-red and Visible satellite data
                                            (not essential, though recommended)
	pin	     inter data	   pireps/clouds
        lm2          grid          composite snow cover (prev hour normally)
      * lga/ram      grid          model data analysis / forecast
      * lso          inter data    SAO obs 

Outputs: 
	lc3     3d grid	(ht)    3d clouds (fractional cover) 
	lps     3d grid         3D Radar Reflectivity (filled in)
	lcb     2d grid		cloud base/top (LCB,LCT) - all clouds are
                                    considered (> .1 cover). Heights are MSL.
                                cloud ceiling (CCE) -  only areas analyzed
                                   with a cloud fraction > 0.65 are considered.
                                   Units are meters AGL.

	lcv     2d grid		column max cloud cover / snow cover
</pre>
Source directory: laps/src/cloud

Reference: Albers S., J. Mcginley, D. Birkenheuer, and J. Smart 1996: The Local
           Analysis and Prediction System (LAPS): Analyses of clouds, 
           precipitation, and temperature. Weather and Forecasting, 11, 
           273-287.

           Available at 'http://laps.fsl.noaa.gov/frd-bin/LAPB.pubs_96.cgi'

 ------ 3.3.5 -----------WATER VAPOR (HUMIDITY PROCESSING)----------------

Last updated: August 1996 by Daniel Birkenheuer

Code organization:

   The moisture code is coordinated by the LQ3 modules all of which (with
   the exception of libraries) exist under ./src/humid/.  The
   main driver, lq3driver.x contains only one subroutine call at this time.

   ./src/humid/lq3_driver1a.f (Module) <active>

   is the primary moisture processing module that sequences the various
   subroutines.

   There is a second routine that formerly was used for HSM satellite
   processing; it is currently deactivated:

   ./src/humid/lq3_driver1b.f (Module) <deactivated>.

   Now, using the GOES forward radiance model and more advanced techniques,
   the satellite inclusion takes place in the above "1a" module. Treat the
   "1b" module as orphan code.


Control file:

   ./data/static/moisture_switch.nl

   Is an ASCII file intended for easy editing and control of the moisture
   modules activities.  The first record controls usage of RAOB data
   (0=off, 1=on).  The second record controls usage of satellite data (LVD
   files) and again (0=off; 8=on, use GOES-8, 9=on, use GOES-9).  This
   module is exported with the RAOB feature OFF and the satellite feature
   ON and SET FOR GOES-8.  The third switch enables (1) or disables (0)
   saturating air in cloudy areas. The fourth now enables using sounder 
   data in lieu of imager data (GOES only).  This should be set to (0) for
   the current time.

Input files:

   Inputs (status as of August 1996) ("grid" designates LAPS netCDF grid
   file unless otherwise stated):
<pre>
   LGA         grid    MAPS/RUC background analysis or forecast

   LSX         grid    LAPS surface analysis

   LC3         grid    LAPS 3-D clouds

   LT1         grid    LAPS 3-D temperatures

   SND         ASCII   RAOB observation file

   LVD         grid    Satellite data from AWIPS SBN

   <off> LH1   grid    LAPS grid of VAS total precipitable water.

   <off> LH2   grid    3 LAPS grids of VAS/radiometer modified precipitable
                          water.



Outputs (note LH3 contains 2 fields):

   LQ3         grid    3D Specific Humidity (floating point number)

   LH3         grid1   3D (RH3 field) Relative Humidity units of percent   
                          0-100 (floating point number) with respect to
                          liquid water if ambient temperature is warmer
                          than 0 C, with respect to ice if ambient
                          temperature is equal to or less than 0 C

   LH3         grid2   3D (RHL field) Relative Humidity units of percent   
                          0-100 (floating point number) with respect to
                          liquid water at all temperatures

   LH4         grid    2D Total precipitable water (meters) (floating point
                                  number)

</pre>
                        PRIMARY ALGORITHM SUMMARIES

RAOB ENHANCEMENT:

     The RAOB data are added to the analysis via a second pass Barnes
     analysis.  Normally, a Barnes analysis consists of two parts.
     The first fills the entire domain with values weighted by the
     distance to the neighboring points.  In the second pass, a
     difference field (derived from the difference of the first pass
     and the observations) is added to the result from the first pass
     with adjusted weights to better tune to the scale of interest.

     In this application we skip the first pass using instead the
     "background" analysis in place of the result of the first pass
     Barnes' result.  The difference field is then generated and
     applied using a set of weights appropriate for the LAPS domain
     resolution and density of observations.

SATELLITE ALGORITHM:
     An essential ingredient of the variational method is a satellite
     forward radiance model.  The forward model produces a simulated
     radiance based on temperature, moisture, and ozone profiles along
     with the temperature of the surface or cloud top, and the
     pressure of that radiating surface (i.e., surface pressure or
     cloud top pressure whichever applies).   Also needed are the
     zenith angle, used to determine the air mass path and optical
     depth between the radiator and the satellite.  The forward model
     used for this work was obtained from NESDIS.  The forward model
     coefficients used for this study were vintage late 1995.

     In order to apply the forward model appropriately, a
     determination of clear and cloudy fields-of-view (FOV) need to be
     determined.  The LAPS cloud analysis is used to identify clear
     and cloudy LAPS grid points.  The analysis as presented here is
     only working from FOVs classified as clear.  Cloudy FOVs probably
     can be used, but this is an early attempt at this technique, so a
     conservative approach was chosen.  Later research may focus on
     using a combination of both clear and cloudy FOVs in the
     algorithm.

     The first step in the algorithm is to assure all the data needed
     for proper execution are present.  These include channel
     radiances derived from AWIPS imagery, the LAPS cloud analysis
     output, the LAPS surface temperature output, and LAPS 3-D
     temperatures.  The forward model also requires an ozone profile
     along with moisture and temperature profiles above 100 hPa.
     These are gotten from climatology since LAPS extends only to 100
     hPa.  The entire ozone profile is provided by the forward model
     since LAPS does not analyze this parameter.

     Next, the forward model is run to verify "clear" LAPS gridpoints,
     where clear is defined as those points in which both the modeled
     and measured GOES image radiances in channel 4 (11 micron) agree
     to with 2K.  This step uses the LAPS thermal and as yet
     unmodified moisture profiles.  Disparity in the channel 4
     brightness temperature comparison indicates that the LAPS thermal
     profile is too far off or perhaps it is really cloudy where the
     LAPS cloud analysis is indicating it is clear.  (It doesn't have
     to be totally cloudy for a disparity to exist, it can be
     partially cloudy and this will still be detectable in this
     difference test.)   This is a conservative test; it really goes
     beyond simple cloud detection though that is a likely cause of
     differences, the forward model check is very sensitive and in
     many ways eliminates any thermal profiles that subsequent
     variational technique will find difficult to deal with.  We are
     basically saying that we will not worry about moisture adjustment
     unless the thermal profiles are reasonable.

     At this point, all gridpoints offering promise of moisture
     adjustment have been identified.  If the domain is totally
     cloudy, the GOES adjustment is discontinued and returns
     unmodified moisture values which are passed to the final QC step.
     Assuming some gridpoints have been classified as clear, the next
     step is a variational adjustment at those locations.  The
     functional evaluated at each gridpoint has the form (using TEX-
     type ASCII, ^=superscript and _=subscript),
<pre>
           5                             3
     J = sum [R^o_i -R(t,o,cw)_i]^2  + sum  (1-c_k)^2        (1)
         i=3                           k=1
</pre>
     where the goal is to determine the optimum set of three
     coefficients.  Each coefficient, c_k is a scaling factor for the
     moisture corresponding to three atmospheric layers (k).   The
     layers range from surface to 700 hPa (k=1), 700 - 500 hPa (k=2),
     and above 500 hPa (k=3).  The forward model radiance (R) is a
     function of LAPS temperature (t), ozone climatology profile (o),
     and LAPS mixing ratio (w).  The moisture profile is scaled with
     the appropriate coefficient (c).  The observed radiance derived
     from AWIPS image data is designated as R^o_i  where subscript i
     indicates the imager channel number.

     The first term in the functional maximizes agreement between the
     forward model and observed radiance at the expense of only
     modifying the water vapor profile.  The second term adds
     stability and gives more weight to solutions in which the
     coefficients departure from unity (no change to the initial
     profile) is minimized.  The stability term was discovered to be
     necessary since without it some very good radiance matches were
     solved but with unreasonable coefficients.

     Note that differences in all three channels are minimized in this
     technique, not only the moisture channel.  Thus, any improvement
     in the "dirty window," channel 5, will also contribute to the
     solution.  A variational technique is used to minimize this
     function and typically requires three to 10 iterations to
     converge. A limit of 50 iterations was set as the maximum number
     to attempt.  If limit was reached, that particular gridpoint was
     excluded and treated as cloudy.

     Once the coefficients are determined, Laplaces equation is solved
     for interior points for which coefficients have not been
     determined.  Then the entire domain is averaged using a spatial
     invariant filter; simply averaging the values in a 3x3 gridpoint
     window, assigning that average to the window's central grid
     location.

     When the coefficients have been determined, they are applied to
     the specific humidity  field at each pressure level for which
     they are designated.  The modified specific humidity field is
     then advanced to the final analysis step.  In this August 1996
     release, the coefficient adjustment is limited to above 500 hPa
     only.

------ 3.3.6 ---------------------DERIV---------------------------------------

Process: deriv.exe - Derived products

Author: Steve Albers (albers@fsl.noaa.gov)

        These derived products are mostly cloud and wind related.
<pre>
Inputs:                                          '*' = essential input
      * lc3     3d grid	(ht)    3d clouds (fractional cover) 
      *	lt1	grid		LAPS 3-d temperature grid
	lps     3d grid         3D Radar Reflectivity (filled in)
        lsx     2d grid         sfc pressure, temperature
	lcv     2d grid		column max cloud cover / snow cover
        lh3     grid            LAPS 3-d Relative Humidity (normally previous 
                                                                          file)
        lso     inter data      SAO obs (for precip type verification)

	lw3	3d grid		3-D winds (U and V are wrt TRUE NORTH)
	lwm	2d grid		surface winds
        vrc/v01/vrz             2-D or 3-D radar reflectivity

Outputs: 
	lcp     3d grid	(pres)	3d clouds (fractional cover) (pressure grid)

	lty     3d grid         3D cloud & precip type (CTY,PTY) 
                                    threshold for cloud cover in CTY is 0.65.

	lwc     3d grids        Cloud liquid water content (LWC)
	                        Cloud ice content (ICE)
	                        Hydrometeor Concentration (PCN)
	                        Rain Concentration        (RAI)
	                        Snow Concentration        (SNO)
	                        Precipitating Ice Conc.   (PIC)

                                The last four are specific contents in
                                kilograms/meter**3. These can be converted to
                                mixing ratio if desired by dividing through
                                by the air density. 

	lil     2d grid		integrated lwc

	lct     2d grid		SFC precip type (SPT,PTT) 
                                    Types are:
                                       0 - No Precip         
                                       1 - Rain             "R"
                                       2 - Snow             "S"
                                       3 - Freezing Rain    "Z"
                                       4 - Ice Pellets      "I"
                                       5 - Hail             "A"
                                       6 - Drizzle          "L"
                                       7 - Freezing Drizzle "F"
                                    SPT uses simple 0 dbz reflectivity 
                                    threshold to define areas of precip.
                                    PTT uses a 13 dbz threshold for non-snow
                                    precip (~.01"/hr), 0 dbz is still used
                                    for snow though a surface dewpoint
                                    depression threshold is used to filter out
                                    areas of snow virga not reaching the ground.
                                    The latter may be more useful for display
                                    purposes by end users. PTT also utilizes
                                    SAO data to delineate areas of drizzle,
                                    freezing drizzle, rain, freezing rain, 
                                    and snow - in areas that radar does not 
                                    detect echoes.
                                SFC cloud type (SCT)
                                    This is the type of the lowest cloud layer
                                    in the LTY (3-D cloud type) file. The 
                                    cover threshold is 0.65. The presence of 
                                    a CB higher up has priority. There are
                                    10 possible cloud types.
                                    Types are:
                                       0 - No Cloud
                                       1 - Stratus          "St"
                                       2 - Stratocumulus    "Sc"
                                       3 - Cumulus          "Cu"
                                       4 - Nimbostratus     "Ns"
                                       5 - Altocumulus      "Ac"
                                       6 - Altostratus      "As"
                                       7 - Cirrostratus     "Cs"
                                       8 - Cirrus           "Ci"
                                       9 - Cirrocumulus     "Cc"
                                      10 - Cumulonimbus     "Cb"

	lmd     3d grid         mean cloud drop diameter 
	lmt	2d grid	        max echo tops (LMT), 
                                Low level reflectivity (LLR)
	lco     3d grid         cloud omega       
	lrp     3d grid         3D icing index (integers 0-6)

                                0 is no icing
                                1 is light continuous
                                2 is mod   continuous
                                3 is heavy continuous
                                4 is light intermittent
                                5 is mod   intermittent
                                6 is heavy intermittent

	lwm	2d grid		interpolated surface winds

	lhe	2d grid		Helicity (Storm Relative Environmental). This 
                                is integrated from the sfc to 3-km AGL. It
                                is numerically equal to -2. times the hodograph
                                area.

                                A calculated storm motion vector is used. First
                                a layer from the sfc to 300mb is used to 
                                calculate the mean wind. A shear vector through
                                the layer is also calculated. The storm motion
                                is assumed to equal the mean wind + .15 times
                                the shear vector (rotated for a right mover 
                                by 90 degrees).

                                Mean Winds (sfc - 300mb layer)

	liw	2d grid		log(LI*Omega) (partially derived from 3-D winds)
	lmr	2d grid		2-D column max radar ref      
	lf1	2d grid		2-D column max radar ref history (maximum 
                                over time since the previous analysis cycle)
</pre>
Source directory: laps/src/deriv

References: Albers S., J. Mcginley, D. Birkenheuer, and J. Smart 1996: The 
            Local Analysis and Prediction System (LAPS): Analyses of clouds, 
            precipitation, and temperature. Weather and Forecasting, 11, 
            273-287.

            Available at 'http://laps.fsl.noaa.gov/frd-bin/LAPB.pubs_96.cgi'


            Albers S. 1995: The LAPS wind analysis. Weather and Forecasting, 
            10, 342-352. 

            Available at 'http://laps.fsl.noaa.gov/frd-bin/LAPB.pubs_95.cgi'

------ 3.3.7 ---------------------ACCUM---------------------------------------

Process: accum.exe - Snowfall/Liquid Equivalent Precipitation

Author: Steve Albers (albers@fsl.noaa.gov)

	LAPS incremental/storm total snowfall/liquid equivalent accumulation.
<pre>
Inputs: (from LSX, LZA processes)
      * lsx	     grid	LAPS surface data grids
      * lt1	     grid	LAPS 3-d temperature grid
        lh3          grid       LAPS 3-d Relative Humidity (normally previous)

      * vrc/v01/vrz  grid       2-D or 3-D radar reflectivity	

Outputs:
	L1S          2d grid	Snowfall over LAPS cycle time (S01 field) 
				Storm total snow accumulation (STO field)
				Rain/Liquid Equivalent Precip (R01 field)
				Storm Total Rain/Liquid Pcp   (RTO field)
</pre>
Source directory: laps/src/accum

Reference: Albers S., J. Mcginley, D. Birkenheuer, and J. Smart 1996: The Local
           Analysis and Prediction System (LAPS): Analyses of clouds, 
           precipitation, and temperature. Weather and Forecasting, 11, 
           273-287.

           Available at 'http://laps.fsl.noaa.gov/frd-bin/LAPB.pubs_96.cgi'

------ 3.3.8 ---------------------BALANCE--------------------------------------

Process: qbalpe.exe - "Quasi-geostrophic balance between height and wind.
     (author: John McGinley/John Snook/John Smart - smart@fsl.noaa.gov)

        LAPS quasi-geostrophic balance of height and wind with temp adjustment.
<pre>
Inputs: (from LT1, LW3 processes)
      * lw3          grid       LAPS 3-d wind analysis
      * lt1          grid       LAPS 3-d temperature analysis

Outputs:
        lt1          3d grid    in lapsprd/balance/lt1 (ht and t field)
        lw3          3d grid    in lapsprd/balance/lw3 (u3, v3 and om field)
</pre>
Source directory: laps/src/balance
Note:             uses data/static/balance.nl (namelist). Repository has lrunbal
                  off meaning that the ported software does not run qbalpe.exe.
********************************************************************************
********************************************************************************

-------- 4.0 --  Porting code mods from LAPS users back to FSL --------------

   We would like to encourage suggestions from LAPS users on how to improve
   LAPS, both scientifically and in the software itself. In general, we should 
   follow a carefully orchestrated procedure to port code improvements back 
   from LAPS users to FSL that may be called "virtual RCS". This is essential 
   to insure compatability as well as to preserve ongoing code developments 
   by FSL and various LAPS users. Prior to making the mods, a LAPS user 
   should "check out" a well defined set of modules from the latest LAPS 
   release (or developmental code from the parallel side of 'peaks.fsl'). This 
   is done in close coordination with the FSL code author(s), listed in
   Section 3. The user can then modify that portion of the code while we 
   temporarily suspend FSL development on that set of modules. The modified 
   code can then be ported back to FSL (along with a log of the code mods 
   suitable for entry into the Revisions logs) for testing and integration 
   into the next LAPS release. 

   In some cases, a less formal process may be easier to go by. Here, the
   user can provide documentation of suggested mods either in descriptive form,
   or in terms of before and after code. The code author can then implement
   the changes in the FSL version. This can be useful in the event the mods are
   simple, or if the user has been working with a relatively old version of
   the software and/or there have been significant recent FSL mods to the
   software. This can also be useful if the user has an idea of a desired
   functionality within LAPS, but has not actually looked at the software
   details associated with implementing the functionality.

   It should be noted that it can be problematic for us to accept software 
   modified by users if the mods were not made on the latest developmental
   FSL version of the particular files. This is because it can be tricky to 
   reconcile two sets of software that have been allowed to diverge and evolve 
   independently. The changes that have occurred in both would have to be
   reconstructed in detail. It is recommended instead that one of the 
   procedures in the first two paragraphs of this section be followed.


-------  5.0 --  LAPS Variables and netCDF File Organization -----------------

LAPS Variables and netCDF File Organization
        (author: Linda Wharton - wharton@fsl.noaa.gov)

Note that more info on the units of the fields, etc. are contained in the
'data/*.cdl' files.


                File LAPS CDF
		Ext  Var  Var   #Lvl  Field

Process surface:
                LT1  T3   t	  21  Temperature
		     HT   z       21  Height
            	LSX  U    su       1  Surface wind u 
       		     V    sv       1  Surface wind v
        	     P    fp       1  1500m Pressure
            	     T    st       1  Temp 
		     TD   std      1  Dewpt Temp
        	     VV   vv	   1  Vertical Velocity
		     RH   srh      1  Relative Humidity
		     MSL  mp	   1  MSL Pressure
         	     TAD  ta       1  Temp Advection
        	     TH   pot      1  Potential Temp
		     THE  ept      1  Equivalent Potential Temp
           	     PS   sp	   1  Pressure
		     VOR  vor	   1  Vorticity
		     MR   mr       1  Mixing Ratio  
         	     MRC  mc       1  Moisture Convergence
        	     DIV  d	   1  Divergence
		     THA  pta      1  Potential Temp Advection
		     MRA  ma       1  Moisture Advection
		     LI   li       1  Lifted Index
		     SPD  spd	   1  Surface Wind Speed
		     CSS  cssi     1  CSSI
		     PBE  pbe      1  Positive Bouyant Energy
		     NBE  nbe      1  Negative Bouyant Energy
		     VIS  vis 	   1  Surface Visibility
                     FWX  fwx      1  Fire Danger
		     HI   hi       1  Heat Index

Process accum:	L1S  S01  s1hr     1  Snow Accum Cycle 
		     STO  stot     1  Snow Accum Storm Tot 
          	     R01  pc	   1  Liq Accum Cycle 
        	     RTO  pt	   1  Liq Accum Storm Tot 
        	
Process humid:  LQ3  SH   sh      21  Specific Humidity 
            	LH3  RH3  rh      21  Relative Humidity 
            	     RHL  rhl	  21  Relative Humidity with resp to liquid
            	LH4  TPW  tpw      1  Integrated Total Precipitable Water

Process wind:   LW3  U3   u       21  Wind u (wrt TRUE NORTH)
		     V3   v       21  Wind v (wrt TRUE EAST)
          	     OM   w       21  Wind omega 

                LWM  SU   u        1  Surface wind u (wrt TRUE NORTH)
                     SV   v        1  Surface wind v (wrt TRUE EAST)
		
Process cloud:	LC3  LC3  camt    42  Fractional Cloud Cover (levels 1-42)

         	LCB  LCB  cbas     1  Cloud base 
		     LCT  ctop     1  Cloud Top
           	     CCE  cce      1  Cloud Ceiling

         	LCV  LCV  ccov     1  Cloud Cover
         	     CSC  csc      1  Cloud Analysis Implied Snow Cover

        	LPS  REF  ref     21  LAPS Radar Reflectivity 

Process deriv:  LCP  LCP  ccpc    21  Fractional Cloud Cover Pressure Coord

		LWC  LWC  lwc     21  Cloud Liquid Water 
		     ICE  ice	  21  Cloud Ice
		     PCN  pcn     21  Hydrometeor Concentration
		     RAI  rai     21  Rain Concentration
		     SNO  sno     21  Snow Concentration
		     PIC  pic     21  Precipitating Ice Concentration

           	LIL  LIL  ilw      1  Integrated Liquid Water
        	LCT  PTY  spt      1  Sfc Precip Type
                     PTT  ptt      1  LAPS Sfc Precip Type
                     SCT  sct      1  Sfc Cloud Type

		LMD  LMD  mcd     21  Mean Cloud Drop Diameter 
		LCO  COM  cw      21  Cloud omega 
         	LRP  LRP  icg     21  Icing Index
		LTY  CTY  ctyp    21  Cloud Type 
		     PTY  ptyp    21  Precip Type 

          	LMT  LMT  etop     1  Max Echo Tops
          	     LLR  llr	   1  Low Level Reflectivity

                LWM  SU   u        1  Surface wind u
                     SV   v        1  Surface wind v

		LHE  LHE  hel      1  Helicity
                     MU   mu       1  Mean wind u 
       		     MV   mv       1  Mean wind v
           	
           	LF1  H    mxrh     1  Max Radar Reflectivity History
		LIW  LIW  liw      1  log(LI*omega)
		     W    w	   1  600mb omega

		LMR  R    mxrf     1  Max Radar Reflectivity

Process soil:   LM1  LSM  lsm      3  Soil Moisture
		LM2  CIV  civ      1  Cumulative Infiltration Volume
		     DWF  dwf	   1  Depth to wetting front
		     WX   wx       1  Wet/Dry grid point
		     EVP  evp      1  Evaporation Data
		     SC   sc       1  Snow covered
		     SM   sm       1  Snow melt
		     MWF  mwf      1  Soil Moisture content Wetting Front

Fcst Model:	RAM  U3   ru	  21  Fcst Model Wind u
		     V3   rv	  21  Fcst Model Wind v
		     HT	  rz	  21  Fcst Model Height
		     T3	  rt	  21  Fcst Model Temperature
		     SH	  rsh	  21  Fcst Model Specific Humidity
		
		RSF  U	  rus 	   1  Fcst Model Surface wind u
	             V	  rvs 	   1  Fcst Model Surface wind v
		     T	  rts 	   1  Fcst Model Surface Temperature
		     P	  rps 	   1  Fcst Model 1500m pressure
		     TD	  rtd 	   1  Fcst Model Dewpoint                 
                     RH   rh       1  Fcst Model Relative humidity 
                     LCB  lcb      1  Fcst Model Cloud base
                     LCT  lct      1  Fcst Model Cloud top
                     MSL  msl      1  Fcst Model MSL pressure
                     LIL  lil      1  Fcst Model Integrated liquid water
                     TPW  tpw      1  Fcst Model Total precipitable water
                     R01  r01      1  Fcst Model Liquid accum cycle     
                     RTO  rto      1  Fcst Model Liquid accum storm total
                     S01  s01      1  Fcst Model Snow accum cycle     
                     STO  sto      1  Fcst Model Snow accum storm total
                     TH   th       1  Fcst Model Potential temperature  
                     THE  the      1  Fcst Model Equivalent potential temp
                     PBE  pbe      1  Fcst Model Positive buoyant energy
                     NBE  nbe      1  Fcst Model Negative buoyant energy
                     PS   ps       1  Fcst Model Surface pressure
                     CCE  cce      1  Fcst Model Cloud ceiling
                     VIS  vis      1  Fcst Model Visibility
                     LCV  lcv      1  Fcst Model Cloud cover
                     LMT  lmt      1  Fcst Model Max echo tops
                     SPT  spt      1  Fcst Model Sfc precip type
                     LHE  lhe      1  Fcst Model Helicity
                     LI   li       1  Fcst Model Lifted index
                     HI   hi       1  Fcst Model Heat index

                RSM  LSM  lsm     11  Fcst Model Soil Moisture


Intermediate LAPS files:

Process vrc_driver:
                VRC  REF  ref      1  NOWRAD 2D radar reflectivity
                VRZ               21  (Proposed 3D reflectivity mosaic)
 
Process remap:  V01  REF  refd    21  Radar reflectivity
                     VEL  veld    21  Radial Velocity    
                     NYQ  nyqd    21  Nyquist velocity

                files V02, V03, V04, V05, V06, V07, V08, V09, V10, V11,
                      V12, V13, V14, V15, V16, V17, V18, V19, V20 same format

Process lga.exe:
                LGA  HT   ht      21  MAPS isentrop height interp to LAPS 
                                      isobaric
                     T3   t       21  MAPS isentrop temp interp to LAPS isobaric
                     SH   sh      21  MAPS specific humidity
                     U3   u       21  MAPS u wind component
                     V3   v       21  MAPS v wind component

Process LH1: 	LH1  PW   pw	   1  Precipitable Water

Process LH2: 	LH2  PW   lpw	   3  Layer Precipitable Water

Process lvd_sat_ingest:
                     LVD  S8W  s8w 1  GOES IR band-8 bright temp warmest pixel
                     S8C  s8c      1  GOES IR band-8 bright temp coldest pixel
                     SVS  svs      1  GOES visible satellite - raw
                     SVN  svn      1  GOES visible satellite - normalized
                     ALB  alb      1  albedo
                     S3A  s3a      1  GOES IR band-3 bright temp averaged
                     S3C  s3c      1  GOES IR band-3 bright temp filtered
                     S4A  s4a      1  GOES IR band-4 bright temp averaged
                     S4C  s4c      1  GOES IR band-4 bright temp filtered
                     S5A  s5a      1  GOES IR band-5 bright temp averaged
                     S5C  s5c      1  GOES IR band-5 bright temp filtered
                     S8A  s8a      1  GOES IR band-8 bright temp averaged
                     SCA  sca      1  GOES IR band-12 bright temp averaged
                     SCC  scc      1  GOES IR band-12 bright temp averaged

                     Note: band-8 is approx 11.2 microns.

Static LAPS file - run by localization:

gridgen_model.exe: creates file 'static.nest7grid'

                     LAT           1  Latitude (degrees)
                     LON           1  Longitude (degrees)
                     AVE           1  Mean elevation MSL (m)
                     STD           1  Unused
                     ENV           1  Unused
                     ZIN           1  Z coordinate - used for plotting in AVS
                     LDF           1  Land Fraction (0=water,1=land)
                     USE           1  Soil Type (under development)

