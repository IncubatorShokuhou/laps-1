      subroutine pk_lambert(kfildo,ipack,nd5,is3,ns3,ipkopt,l3264b,
     1                      locn,ipos,ier,*)
c
c        march   2000   lawrence   gsc/tdl   original coding
c        january 2001   glahn      comments; ier = 303 changed to 304;
c                                  added check for size of is3( )
c
c        purpose
c            packs template 3.30, a lambert conformal projection 
c            template in section 3 of a grib2 message.  it is the
c            responsibility of the calling routine to pack the first
c            13 octets in section 3.
c
c        data set use
c           kfildo - unit number for output (print) file. (output)
c
c        variables
c              kfildo = unit number for output (print) file. (input)
c            ipack(j) = the array that holds the actual packed message
c                       (j=1,nd5). (input/output)
c                 nd5 = the size of the array ipack( ). (input)
c              is3(j) = contains the lambert conformal projection
c                       information (in elements 15 through 78)
c                       that will be packed into ipack( ) (j=1,ns3).
c                       (input/output)
c                 ns3 = size of is3( ). (input) 
c              ipkopt = packing indicator:
c                       0 = error, don't pack
c                       1 = pack ia( ), simple
c                       2 = pack ia( ) and ib( ), simple
c                       3 = pack complex or spatial differencing
c                       4 = pack complex.
c                       (input)
c              l3264b = the integer word length in bits of the machine
c                       being used. values of 32 and 64 are
c                       accommodated. (input)
c                locn = the word position to place the next value.
c                       (input/output)
c                ipos = the bit position in locn to start placing
c                       the next value. (input/output)
c                 ier = return status code. (output)
c                         0 = good return.
c                       1-4 = error codes generated by pkbg. see the 
c                             documentation in the pkbg routine.
c                       302 = is3( ) has not been dimensioned large
c                             enough to contain the entire template. 
c                       304 = is3(13) does not indicate polar
c                             stereographic map projection; 
c                             incorrectly called subroutine. 
c                       310 = unrecognized or unsupported shape of
c                             earth code in is3(15) returned by
c                             subroutine earth.
c                   * = alternate return when ier ne 0.
c
c             local variables
c               isign = a flag indicating whether a value to be
c                       packed is positive or negative.
c                   n = l3264b = the integer word length in bits of
c                       the machine being used. values of 32 and
c                       64 are accommodated.
c             minsize = the smallest allowable dimension for is3( ).
c
c        non system subroutines called
c           earth, pkbg
c
      parameter(minsize=78)
c
      dimension ipack(nd5),is3(ns3)
c
      n=l3264b
      ier=0
c
c        check to make sure that the user wants to process
c        a lambert conformal projection.  check for ns3 ge 13
c        assures a value for is3(13).
c
      if(ns3.ge.13)then
c
         if(is3(13).ne.30)then
c           write(kfildo,10)is3(13)
c10         format(/' map projection code ',i4,' indicated by is3(13)'/
c    1              ' is not lambert conformal. please refer to the'/
c    2              ' grib2 documentation to determine the correct'/
c    3              ' map projection packer to call.'/) 
            ier=304
            goto 900
         endif
c
      else
         ier=302
         go to 900
      endif
c
c        check the dimensions of is3( ).
c
      if(ns3.lt.minsize)then
         ier=302
         go to 900
      endif
c
c        pack the shape of the earth.
      call earth(kfildo,ipack,nd5,is3,ns3,n,locn,ipos,ier)
      if(ier.ne.0)goto 900
c
c        pack the number of points along the x-axis and the y-axis
c        (nx & ny).
      call pkbg(kfildo,ipack,nd5,locn,ipos,is3(31),32,n,ier,*900)
      call pkbg(kfildo,ipack,nd5,locn,ipos,is3(35),32,n,ier,*900)
c
c        pack the latitude & longitude of the first grid point
      isign=0
      if(is3(39).lt.0) isign=1
      call pkbg(kfildo,ipack,nd5,locn,ipos,isign,1,n,ier,*900)
      call pkbg(kfildo,ipack,nd5,locn,ipos,abs(is3(39)),
     1          31,n,ier,*900)
      isign=0
      if(is3(43).lt.0) isign=1
      call pkbg(kfildo,ipack,nd5,locn,ipos,isign,1,n,ier,*900)
      call pkbg(kfildo,ipack,nd5,locn,ipos,abs(is3(43)),
     1          31,n,ier,*900)
c
c        pack the resolution and component flags.
      call pkbg(kfildo,ipack,nd5,locn,ipos,is3(47),8,n,ier,*900)
c
c        pack the latitude where the x and y direction grid 
c        lengths are specified.
      isign=0
      if(is3(48).lt.0) isign=1
      call pkbg(kfildo,ipack,nd5,locn,ipos,isign,1,n,ier,*900)
      call pkbg(kfildo,ipack,nd5,locn,ipos,abs(is3(48)),
     1          31,n,ier,*900)
c
c        pack the longitude of the meridian parallel to the y-axis
c        along which latitude increases as the y-coordinate 
c        increases.
      isign=0
      if(is3(52).lt.0) isign=1
      call pkbg(kfildo,ipack,nd5,locn,ipos,isign,1,n,ier,*900)
      call pkbg(kfildo,ipack,nd5,locn,ipos,abs(is3(52)),
     1          31,n,ier,*900)
c
c        pack the x and y direction grid lengths (dx & dy).
      call pkbg(kfildo,ipack,nd5,locn,ipos,is3(56),32,n,ier,*900)
      call pkbg(kfildo,ipack,nd5,locn,ipos,is3(60),32,n,ier,*900)
c
c        pack the projection centre flag
      call pkbg(kfildo,ipack,nd5,locn,ipos,is3(64),8,n,ier,*900)
c
c        pack the scanning mode. check to see if the data points 
c        have been ordered boustrophedonically. if so, set bit 4
c        to 1 in the scanning mode octet.
c
cwdt  if((ipkopt.eq.3).or.(ipkopt.eq.4))then
cwdt     is3(65)=ior(is3(65),16)
cwdt  else
         is3(65)=iand(is3(65),239)
cwdt  endif
c
      call pkbg(kfildo,ipack,nd5,locn,ipos,is3(65),8,n,ier,*900)
c
c        pack the first and second latitudes from the pole
c        where the secant cone cuts the sphere.
      isign=0
      if(is3(66).lt.0) isign=1
      call pkbg(kfildo,ipack,nd5,locn,ipos,isign,1,n,ier,*900)
      call pkbg(kfildo,ipack,nd5,locn,ipos,abs(is3(66)),
     1          31,n,ier,*900)
      isign=0
      if(is3(70).lt.0) isign=1
      call pkbg(kfildo,ipack,nd5,locn,ipos,isign,1,n,ier,*900)
      call pkbg(kfildo,ipack,nd5,locn,ipos,abs(is3(70)),
     1          31,n,ier,*900)
c
c        pack the latitude and longitude of the southern pole.
      isign=0
      if(is3(74).lt.0) isign=1
      call pkbg(kfildo,ipack,nd5,locn,ipos,isign,1,n,ier,*900)
      call pkbg(kfildo,ipack,nd5,locn,ipos,abs(is3(74)),
     1          31,n,ier,*900)
      isign=0
      if(is3(78).lt.0) isign=1
      call pkbg(kfildo,ipack,nd5,locn,ipos,isign,1,n,ier,*900)
      call pkbg(kfildo,ipack,nd5,locn,ipos,abs(is3(78)),
     1          31,n,ier,*900)
c
c       error return section
 900  if(ier.ne.0)return 1 
c
      return
      end
