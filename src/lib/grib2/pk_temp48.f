      subroutine pk_temp48(kfildo,ipack,nd5,is4,ns4,l3264b,
     1                     locn,ipos,ier,*)
c
c        march   2000   lawrence   gsc/tdl   original coding
c        january 2001   glahn      comments; added test for is4( ) 
c                                  size; ier = 403 changed to 402
c
c        purpose
c            packs template 4.8 into product definition section 
c            of a grib2 message.  template 4.8 is for 
c            average, accumulation, and/or extreme values
c            at a horizontal level or in a horizontal layer
c            in a continuous or non-continuous time interval.
c            it is the responsibility of the calling routine
c            to pack the first 9 octets in section 4.
c
c        data set use
c           kfildo - unit number for output (print) file. (output)
c
c        variables
c              kfildo = unit number for output (print) file. (input)
c            ipack(j) = the array that holds the actual packed message
c                       (j=1,nd5). (input/output)
c                 nd5 = the size of the array ipack( ). (input)
c              is4(j) = contains the product definition information 
c                       for template 4.8 (in elements 10 through 42
c                       or more) that will be packed into ipack( )
c                       (j=1,ns4).  (input)
c                 ns4 = size of is4( ). (input) 
c              l3264b = the integer word length in bits of the machine
c                       being used. values of 32 and 64 are
c                       accommodated. (input)
c                locn = the word position to place the next value.
c                       (input/output)
c                ipos = the bit position in locn to start placing
c                       the next value. (input/output)
c                 ier = return status code. (output)
c                        0 = good return.
c                      1-4 = error codes generated by pkbg. see the 
c                            documentation in the pkbg routine.
c                      402 = is4 has not been dimensioned large
c                            enough to contain the entire template. 
c                   * = alternate return when ier ne 0. 
c
c             local variables
c             minsize = the smallest allowable dimension for is4( ).
c                   n = l3264b = the integer word length in bits of
c                       the machine being used. values of 32 and
c                       64 are accommodated.
c
c        non system subroutines called
c           pkbg
c
      parameter(minsize=43)
c
      dimension ipack(nd5),is4(ns4)
c
      n=l3264b
      ier=0
c
c        check the dimensions of is4( ).
      if(ns4.lt.minsize)then
c        write(kfildo,10)ns4,minsize
c10      format(/' is4( ) is currently dimensioned to contain'/
c    1           ' ns4=',i4,' elements. this array must be'/
c    2           ' dimensioned to at least ',i4,' elements'/
c    3           ' to contain all of the data in product'/
c    4           ' definition template 4.1.'/)
         ier=402
      else
c
c           since this template shares the same information
c           as template 4.0, call the pk_temp40 routine
         call pk_temp40(kfildo,ipack,nd5,is4,ns4,l3264b,locn,ipos,
     1                  ier,*900)
c
c           pack the year
         call pkbg(kfildo,ipack,nd5,locn,ipos,is4(35),16,n,ier,*900)
c
c           pack the month 
         call pkbg(kfildo,ipack,nd5,locn,ipos,is4(37),8,n,ier,*900)
c
c           pack the day
         call pkbg(kfildo,ipack,nd5,locn,ipos,is4(38),8,n,ier,*900)
c
c           pack the hour
         call pkbg(kfildo,ipack,nd5,locn,ipos,is4(39),8,n,ier,*900)
c
c           pack the minute
         call pkbg(kfildo,ipack,nd5,locn,ipos,is4(40),8,n,ier,*900)
c
c           pack the second
         call pkbg(kfildo,ipack,nd5,locn,ipos,is4(41),8,n,ier,*900)
c
c           pack the number of time range specifications describing
c           the time intervals used to calculate the statistically
c           processed field.
         call pkbg(kfildo,ipack,nd5,locn,ipos,is4(42),8,n,ier,*900)
c
c           pack the total number of data values missing in 
c           statistical process.
         call pkbg(kfildo,ipack,nd5,locn,ipos,is4(43),32,n,ier,*900)
c
c           is is4( ) large enough to hold what is4(42) says it
c           should?
c     
         if(ns4.lt.minsize+12*is4(42))then
c              above is equivalent to:
c              minsize+3+12*(is4(42)-3.  the last value in is4( )
c              fills 4 bytes, but is4( ) doesn't really have to
c              be that large.  the +3 is to accommodate a 4-byte
c              value in is4(43).
            ier=402
            go to 900
         endif
c
         do 20 i=1,is4(42)
            ic=12*(i-1)
c
c              pack the statistical process used to calculate the 
c              processed field from the field at each time increment
c              during the time range.
            call pkbg(kfildo,ipack,nd5,locn,ipos,is4(47+ic),8,n,
     1                ier,*900)
c
c              pack the type of time increment between successive
c              fields used in the statistical process.
            call pkbg(kfildo,ipack,nd5,locn,ipos,is4(48+ic),8,n,
     1                ier,*900)
c
c              pack the indicator of unit of time for time range over
c              which statistical processing is done.
            call pkbg(kfildo,ipack,nd5,locn,ipos,is4(49+ic),8,n,
     1                ier,*900)
c
c              pack the length of the time range over which statistical
c              processing is done, in units defined by the previous 
c              octet.
            call pkbg(kfildo,ipack,nd5,locn,ipos,is4(50+ic),32,n,
     1                ier,*900)
c
c              pack the indicator of unit of time for the increment
c              between the successive fields used.
            call pkbg(kfildo,ipack,nd5,locn,ipos,is4(54+ic),8,n,
     1                ier,*900)
c
c              pack the time increment between successive fields,
c              in units defined by the previous octet.
            call pkbg(kfildo,ipack,nd5,locn,ipos,is4(55+ic),32,n,
     1                ier,*900)
c
 20      enddo
c
      endif
c
c       error return section
 900  if(ier.ne.0)return 1
c
      return
      end
