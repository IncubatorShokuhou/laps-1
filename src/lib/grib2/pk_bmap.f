      subroutine pk_bmap(kfildo,ib,nxy,ipack,nd5,locn,ipos,
     1                   l3264b,ier,*)
c
c        march   2000   lawrence   gsc/tdl    original coding
c        march   2000   glahn      changed nx*ny to nxy;
c                                  checked for size of ipack( );
c                                  changed name from pkbmap
c        january 2001   glahn      comments; made standard return;
c                                  changed ier = 601 to 605
c
c        purpose
c           packs a bit-map in ib( ) into ipack( ).
c
c        data set use
c           kfildo - unit number for output (print) file. (output)
c
c        variables
c              kfildo = unit number for output (print) file.  (input)
c               ib(k) = contains the bitmap to be packed.
c                       (k=1,nxy).  (input)
c                 nxy = the dimensions of ib( ).  (input)
c            ipack(j) = the array that holds the actual packed
c                       message (j=1,nd5).  (input/output)
c                 nd5 = the size of the array ipack( ).  (input)
c                locn = the word position to place the next value.
c                       (input/output)
c                ipos = the bit position in locn to start placing
c                       the next value. (input/output)
c              l3264b = the integer word length in bits of the machine
c                       being used.  values of 32 and 64 are
c                       accommodated.  (input)
c                 ier = return status code. (output)
c                         0 = good return.
c                       1-4 = error codes generated by pkbg. see 
c                             the documentation in the pkbg
c                             routine.
c                       605 = not enough space in pack( ).
c                   * = alternate error return when ier ge 900.
c
c             local variables
c               ifill = contains the number of bits to be
c                       zero-padded to make the packed bit-map
c                       occupy a whole number of octets.
c                   j = loop index.
c
c        non system subroutines called
c           pkbg
c
      dimension ipack(nd5),ib(nxy)
c
      data izero/0/
c
      if(nxy.gt.(l3264b+1-ipos)+(nd5-locn)*l3264b)then
         ier=605
c***d       write(kfildo,103)nxy,locn,ipos,nd5,ier
c***d103     format(/' nxy = 'i9,' requires more bits',
c***d    1           ' than are available in ipack( ),',
c***d    2           ' with locn ='i8,', ipos ='i4,', and nd5 ='i8,'.'/
c***d    3           ' return from pk_bmap with ier ='i4)
         go to 900
      endif
c
      do j=1,nxy
c
         call mvbits(ib(j),0,1,ipack(locn),l3264b-ipos)
c
         if(ipos.eq.l3264b)then
            ipos=1
            locn=locn+1
         else
            ipos=ipos+1
         endif
      end do
c
c        pad with zeros to fill out an octet, if necessary.
c
      ifill=mod(33-ipos,8)
c
      if(ifill.ne.0)then
         call pkbg(kfildo,ipack,nd5,locn,ipos,izero,ifill,
     1             l3264b,ier,*900)
      endif
c
c       error return section
c
 900  if(ier.ne.0)return 1
c
      return
      end
