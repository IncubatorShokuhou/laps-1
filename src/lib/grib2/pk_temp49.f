      subroutine pk_temp49(kfildo,ipack,nd5,is4,ns4,l3264b,
     1                     locn,ipos,ier,*)
c
c        july      2002   rudack  used template 4.0 as a guide  
c        september 2002   glahn   modified to call pk_temp40; now   
c                                 treats is4(38) and is4(43) as signed
c
c        purpose
c            packs template 4.9, a template for pop12 from the product
c            definition section of a grib2 message.  it is the 
c            responsibility of the calling routine to pack the first 
c            9 octets in section 4.
c
c        data set use
c           kfildo - unit number for output (print) file. (output)
c
c        variables
c              kfildo = unit number for output (print) file. (input)
c            ipack(j) = the array that holds the actual packed message
c                       (j=1,nd5). (input/output)
c                 nd5 = the size of the array ipack( ). (input)
c              is4(j) = the product definition information for 
c                       template 4.9 is written to elements 10 through
c                       55 or more, depending on the time range over 
c                       which statistical processing is done
c                       (j=1,ns4).  (input/output)
c                 ns4 = size of is4( ). (input) 
c              l3264b = the integer word length in bits of the machine
c                       being used. values of 32 and 64 are
c                       accommodated. (input)
c                locn = the word position from which to pack the
c                       next value. (input/output)
c                ipos = the bit position in locn from which to start
c                       packing the next value.  (input/output)
c                 ier = return status code. (output)
c                         0 = good return.
c                       1-4 = error codes generated by pkbg. see the 
c                             documentation in the pkbg routine.
c                       402 = is4( ) has not been dimensioned large
c                             enough to contain the entire template. 
c                       403 = is4(8) does not contain a supported 
c                             template number.
c                   * = alternate return when ier ne 0. 
c
c             local variables
c             minsize = the smallest allowable dimension for is4( ).
c                   n = l3264b = the integer word length in bits of
c                       the machine being used. values of 32 and
c                       64 are accommodated.
c               isign = sign of value being packed, 0 = positive,
c                       1 = negative.  the sign always goes in the
c                       leftmost bit of the area assigned to that value.
c
c        non system subroutines called
c           pkbg
c
      parameter(minsize=55)
c
      dimension ipack(nd5),is4(ns4)
c
      n=l3264b
      ier=0
c
c        check to make sure that this is template 4.9. 
c
      if(is4(8).ne.9)then
c        write(kfildo,10)is4(8)
c10      format(/' template ',i4,' indicated by is4(8)'/
c    1           ' is not correct in pk_temp49.'/)
         ier=403
         go to 900
      endif
c
c        check the dimensions of is4( ).
c
      if(ns4.lt.minsize)then
c        write(kfildo,20)ns4,minsize
c20      format(/' is4( ) is currently dimensioned to contain'/
c    1           ' ns4=',i4,' elements. this array must be'/
c    2           ' dimensioned to at least ',i4,' elements'/
c    3           ' to contain all of the data in product'/
c    4           ' definition template 4.9.'/)
         ier=402
         go to 900
      endif
c
c           since this template shares the same information
c           as template 4.0, call the pk_temp40 routine
         call pk_temp40(kfildo,ipack,nd5,is4,ns4,l3264b,locn,ipos,
     1                  ier,*900)
c
c        pack the forecast probability number.
      call pkbg(kfildo,ipack,nd5,locn,ipos,is4(35),8,n,ier,*900)
c
c        pack the total number of forecast probabilities.
      call pkbg(kfildo,ipack,nd5,locn,ipos,is4(36),8,n,ier,*900)
c
c        pack the probability type.
      call pkbg(kfildo,ipack,nd5,locn,ipos,is4(37),8,n,ier,*900)
c
c        pack the scale factor of lower limit.
         isign=0
         if(is4(38).lt.0) isign=1
         call pkbg(kfildo,ipack,nd5,locn,ipos,isign,1,n,ier,*900)
         call pkbg(kfildo,ipack,nd5,locn,ipos,abs(is4(38)),7,n,ier,*900)
c
c        pack the scaled value of lower limit.
      call pkbg(kfildo,ipack,nd5,locn,ipos,is4(39),32,n,ier,*900)
c
c        pack the scale value of upper limit.
         isign=0
         if(is4(43).lt.0) isign=1
         call pkbg(kfildo,ipack,nd5,locn,ipos,isign,1,n,ier,*900)
         call pkbg(kfildo,ipack,nd5,locn,ipos,abs(is4(43)),7,n,ier,*900)
c
c        pack the scaled value of upper limit.
      call pkbg(kfildo,ipack,nd5,locn,ipos,is4(44),32,n,ier,*900)
c
c        pack year of end of overall time interval. 
      call pkbg(kfildo,ipack,nd5,locn,ipos,is4(48),16,n,ier,*900)
c
c        pack month of end of overall time interval. 
      call pkbg(kfildo,ipack,nd5,locn,ipos,is4(50),8,n,ier,*900)
c
c        pack day of end of overall time interval. 
      call pkbg(kfildo,ipack,nd5,locn,ipos,is4(51),8,n,ier,*900)
c
c        pack hour of end of overall time interval. 
      call pkbg(kfildo,ipack,nd5,locn,ipos,is4(52),8,n,ier,*900)
c
c        pack minute of end of overall time interval.  
      call pkbg(kfildo,ipack,nd5,locn,ipos,is4(53),8,n,ier,*900)
c
c        pack second of end of overall time interval. 
      call pkbg(kfildo,ipack,nd5,locn,ipos,is4(54),8,n,ier,*900)
c
c        pack the number of time range specifications describing
c        the time intervals used to calculate the statistically
c        processed field.
      call pkbg(kfildo,ipack,nd5,locn,ipos,is4(55),8,n,ier,*900)
c
c        check to make sure that is4( ) was dimensioned large enough
c        to contain the data for all of the is4(55) time ranges.
c
      isize=56+12*(is4(55)-1)
      if(ns4.lt.isize)then
c        write(kfildo,19)ns4,isize
c19      format(/' is4( ) is currently dimensioned to contain'/
c    1           ' ns4=',i4,' elements.  this array must be'/
c    2           ' dimensioned to at least ',i4,' elements'/
c    3           ' to contain all of the time ranges'/
c    4           ' in product definition template 4.9.'/)
         ier=402
         go to 900
      endif
c
      do 30 i=1,is4(55)
         ic=12*(i-1)
c
c           pack the total number of data values missing in
c           statistical process.
         call pkbg(kfildo,ipack,nd5,locn,ipos,is4(56+ic),32,n,
     1             ier,*900)
c
c           pack the statistical process used to calculate the
c           processed field from the field at each time increment
c           during the time range.
         call pkbg(kfildo,ipack,nd5,locn,ipos,is4(60+ic),8,n,
     1             ier,*900)
c
c           pack the type of time increment between successive
c           fields used in the statistical process.
         call pkbg(kfildo,ipack,nd5,locn,ipos,is4(61+ic),8,n,
     1             ier,*900)
c
c           pack the indicator of unit of time for time range over
c           which statistical processing is done.
         call pkbg(kfildo,ipack,nd5,locn,ipos,is4(62+ic),8,n,
     1             ier,*900)
c
c           pack the length of the time range over which statistical
c           processing is done, in units defined by the previous
c           octet.
         call pkbg(kfildo,ipack,nd5,locn,ipos,is4(63+ic),32,n,
     1             ier,*900)
c
c           pack the indicator of unit of time for the increment
c           between the successive fields used.
         call pkbg(kfildo,ipack,nd5,locn,ipos,is4(67+ic),8,n,
     1             ier,*900)
c
c           pack the time increment between successive fields,
c           in units defined by the previous octet.
         call pkbg(kfildo,ipack,nd5,locn,ipos,is4(68+ic),32,n,
     1             ier,*900)
c
 30   enddo
c
c       error return section
c
 900  if(ier.ne.0)return 1
c
      return
      end
