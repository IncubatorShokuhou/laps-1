      integer function length(kfildo,ipack,nd5,l3264b,loc1,ipos1,
     1                        loc2,ipos2,ier)
c
c        march    2000   lawrence  gsc/tdl   original coding
c        january  2001   glahn     write(kfildo) made /d; comments
c        january  2001   glahn/lawrence restructured slightly;
c                                  added test for ipos1 and ipos2 in
c                                  range 1 to l3264b
c        february 2001   glahn/lawrence removed return 1
c        february 2002   glahn     purpose comment to include packing
c
c        purpose
c           returns the number of whole octets separating
c           the word/bit position pairs loc2,ipos2 and loc1,ipos1.
c           the word position in ipack indicated by loc2 needs to
c           be greater than or equal to the word position indicated
c           by loc1.  when the word positions are equal, then the
c           bit position ipos2 must be greater than or equal to the
c           bit position ipos1.  otherwise, this routine will
c           generate an error.  the return length is also packed
c           into ipack at loc1, ipos1.
c
c           an example:
c              assuming that we are working on system with four
c              byte (32 bit) words; loc1 represents word 1 in
c              ipack and ipos1 points to bit 2 in that word; and
c              loc2 represents word 2 in ipack and ipos2 points
c              to bit 31 in that word, the number of whole octets
c              separating these two word/bit positions would be 7.
c
c        data set use
c           kfildo - unit number for output (print) file. (output)
c
c        variables
c              kfildo = unit number for output (print) file. (input)
c            ipack(j) = the array that holds the actual packed message
c                       (j=1,nd5). (input/output)
c                 nd5 = the size of the array ipack( ). (input)
c              l3264b = the integer word length in bits of the machine
c                       being used. values of 32 and 64 are
c                       accommodated. (input)
c                loc1 = indicates the word position at the lower
c                       end of the range of octets.  (input/output)
c               ipos1 = indicates the bit position in loc1.
c                       (input/output)
c                loc2 = indicates the word position at the upper
c                       bound of the range of octets. (input)
c               ipos2 = indicates the bit position in loc2.
c                       (input)
c                 ier = return status code. (output)
c                         0 = good return.
c                       1-4 = error codes generated by pkbg and length.
c                         5 = loc2 points to a word in ipack before
c                             the word pointed to by loc1.
c                         6 = loc2 and loc1 point to the same word, but
c                             ipos2 points to a bit position before
c                             ipos1.
c
c             local variables
c              length = the whole number of octets between the 
c                       loc1,ipos1 and loc2,ipos2 pairs. this
c                       value is returned to the calling routine.
c
c        non system subroutines called
c           pkbg
c
      dimension ipack(nd5)
c
      ier=0
c
      if(ipos1.le.0.or.ipos1.gt.l3264b.or.
     1   ipos2.le.0.or.ipos2.gt.l3264b)then
         ier=2
         
c        check to make sure that loc2 is greater than loc1. if they
c        are equal, make sure that ipos2 is greater than or equal to
c        to ipos1.
c
      elseif(loc2.lt.loc1)then
c        write(kfildo,10)
c10      format(/' loc2 must be greater than or equal to loc1.'/)
         ier=5
c
      else if(loc2.eq.loc1)then
c
         if(ipos2.lt.ipos1)then
c           write(kfildo,20)
c20         format(/' when loc2 and loc1 represent the same word,'/
c    1              ' ipos2 must be greater than or equal to ipos1.'/)
            ier=6
c
         endif
      else
c
         length = (loc2*l3264b/8 - (l3264b+1-ipos2)/8)
     1          - (loc1*l3264b/8 - (l3264b+1-ipos1)/8)
         call pkbg(kfildo,ipack,nd5,loc1,ipos1,length,32,l3264b,ier,
     1             *900)
c
      endif
c
 900  return
      end
