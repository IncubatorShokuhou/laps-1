      subroutine read_rdr_vrc(cfname,x,y,z,record, nx, ny,
     + imax, jmax, kdim, kmax, ref_fcinv, dx, dy, la1,
     + latin1, latin2, lo1, lov, level, ref, reftime, valtime,
     + asctime, earth_shape, grid_name, grid_type, origin_name,
     + process_name, ref_comment, x_dim, y_dim, istatus)
c
c
c routine reads radar files generated by remapper. applicable to
c wfo installations and other remapper output in laps domain.
c
c j. smart   12/98  modified result from perl gennet.pl script
c
      include 'netcdf.inc'

      integer record, x, y,z,nf_fid, nf_vid, nf_status
      integer nx, ny, imax, jmax, kdim, kmax, ref_fcinv( z, record)

      real dx, dy, la1, latin1, latin2, lo1, lov, level, ref( x,  y, 
     +     z, record)

      double precision reftime(record), valtime(record)

      character*132 origin_name
      character*132 x_dim
      character*132 y_dim
      character*132 earth_shape
      character*132 asctime(record)
      character*132 grid_name
      character*132 process_name
      character*132 ref_comment( z, record)
      character*132 grid_type
      character*(*) cfname

      call read_rdr_head(cfname, x,y,z,record, nx, ny,
     + imax, jmax, kdim, kmax, ref_fcinv, dx, dy, la1,
     + latin1, latin2, lo1, lov, level, reftime, valtime,
     + asctime, earth_shape, grid_name, grid_type, origin_name,
     + process_name, ref_comment, x_dim, y_dim)

      call read_rdr_data(cfname,x,y,z,record,ref,istatus)
c
      return
      end
c
c  subroutine to read the file "laps vrc file - nowrad 2d radar" 
c
      subroutine read_rdr_head(cfname, x,y,z,record, nx, ny,
     + imax,jmax,kdim, kmax, ref_fcinv, dx, dy, la1, latin1, latin2,
     + lo1, lov, level, reftime, valtime, asctime, earth_shape, 
     + grid_name, grid_type, origin_name, process_name, 
     + ref_comment, x_dim, y_dim)
c
      include 'netcdf.inc'

      integer record, x, y,z,nf_fid, nf_vid, nf_status
      integer nx, ny, imax, jmax, kdim, kmax
      integer ref_fcinv( z, record)

      real dx, dy, la1, latin1, latin2, lo1, lov, level

      double precision reftime(record), valtime(record)
      character*132 origin_name
      character*132 x_dim
      character*132 y_dim
      character*132 earth_shape
      character*132 asctime(record)
      character*132 grid_name
      character*132 process_name
      character*132 ref_comment( z, record)
      character*132 grid_type
      character*(*) cfname

      istatus = 0
c
c
c
      call get_rdr_dims(cfname,x,y,z,record,istatus)
      if(istatus .ne. 1)then
         print*,'error return - get_rdr_dims '
         return
      endif
c
c  open netcdf file for reading
c
      nf_status = nf_open(cfname,nf_nowrite,nf_fid)
      if(nf_status.ne.nf_noerr) then
        call s_len(cfname,nf)
        print *, nf_strerror(nf_status)
        print *,'nf_open ',cfname(1:nf)
        return
      endif
c
c   variables of type real
c  ---------------------------
c
c     variable        netcdf long name
c      dx           "x grid increment"
c
        nf_status = nf_inq_varid(nf_fid,'dx',nf_vid)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var dx'
      endif
        nf_status = nf_get_var_real(nf_fid,nf_vid,dx)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var dx'
        return
      endif
c
c     variable        netcdf long name
c      dy           "y grid increment"
c
        nf_status = nf_inq_varid(nf_fid,'dy',nf_vid)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var dy'
      endif
        nf_status = nf_get_var_real(nf_fid,nf_vid,dy)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var dy'
        return
      endif
c
c     variable        netcdf long name
c      la1          "first latitude"
c
        nf_status = nf_inq_varid(nf_fid,'la1',nf_vid)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var la1'
      endif
        nf_status = nf_get_var_real(nf_fid,nf_vid,la1)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var la1'
        return
      endif
c
c     variable        netcdf long name
c      latin1       "orientation of grid"
c
        nf_status = nf_inq_varid(nf_fid,'latin1',nf_vid)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var latin1'
      endif
        nf_status = nf_get_var_real(nf_fid,nf_vid,latin1)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var latin1'
        return
      endif
c
c     variable        netcdf long name
c      latin2       "orientation of grid"
c
        nf_status = nf_inq_varid(nf_fid,'latin2',nf_vid)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var latin2'
      endif
        nf_status = nf_get_var_real(nf_fid,nf_vid,latin2)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var latin2'
        return
      endif
c
c     variable        netcdf long name
c      lo1          "first longitude"
c
        nf_status = nf_inq_varid(nf_fid,'lo1',nf_vid)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var lo1'
      endif
        nf_status = nf_get_var_real(nf_fid,nf_vid,lo1)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var lo1'
        return
      endif
c
c     variable        netcdf long name
c      lov          "orientation of grid"
c
        nf_status = nf_inq_varid(nf_fid,'lov',nf_vid)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var lov'
      endif
        nf_status = nf_get_var_real(nf_fid,nf_vid,lov)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var lov'
        return
      endif
c
c     variable        netcdf long name
c      level        "level of data"
c
        nf_status = nf_inq_varid(nf_fid,'level',nf_vid)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var level'
      endif
        nf_status = nf_get_var_real(nf_fid,nf_vid,level)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var level'
        return
      endif
c
c   variables of type int
c   ----------------------
c
c     variable        netcdf long name
c      nx           "number of x points"
c
        nf_status = nf_inq_varid(nf_fid,'nx',nf_vid)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var nx'
      endif
        nf_status = nf_get_var_int(nf_fid,nf_vid,nx)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var nx'
        return
      endif
c
c     variable        netcdf long name
c      ny           "number of y points"
c
        nf_status = nf_inq_varid(nf_fid,'ny',nf_vid)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var ny'
      endif
        nf_status = nf_get_var_int(nf_fid,nf_vid,ny)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var ny'
        return
      endif
c
c     variable        netcdf long name
c      imax         
c
        nf_status = nf_inq_varid(nf_fid,'imax',nf_vid)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var imax'
      endif
        nf_status = nf_get_var_int(nf_fid,nf_vid,imax)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var imax'
        return
      endif
c
c     variable        netcdf long name
c      jmax         
c
        nf_status = nf_inq_varid(nf_fid,'jmax',nf_vid)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var jmax'
      endif
        nf_status = nf_get_var_int(nf_fid,nf_vid,jmax)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var jmax'
        return
      endif
c
c     variable        netcdf long name
c      kdim         
c
        nf_status = nf_inq_varid(nf_fid,'kdim',nf_vid)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var kdim'
      endif
        nf_status = nf_get_var_int(nf_fid,nf_vid,kdim)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var kdim'
        return
      endif
c
c     variable        netcdf long name
c      kmax         
c
        nf_status = nf_inq_varid(nf_fid,'kmax',nf_vid)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var kmax'
      endif
        nf_status = nf_get_var_int(nf_fid,nf_vid,kmax)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var kmax'
        return
      endif
c
c     variable        netcdf long name
c      ref_fcinv    
c
        nf_status = nf_inq_varid(nf_fid,'ref_fcinv',nf_vid)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var ref_fcinv'
      endif
        nf_status = nf_get_var_int(nf_fid,nf_vid,ref_fcinv)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var ref_fcinv'
        return
      endif

c   variables of type double
c   --------------------------
c
c     variable        netcdf long name
c      reftime      "reference time"
c
        nf_status = nf_inq_varid(nf_fid,'reftime',nf_vid)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var reftime'
      endif
        nf_status = nf_get_var_double(nf_fid,nf_vid,reftime)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var reftime'
        return
      endif
c
c     variable        netcdf long name
c      valtime      "valid time"
c
        nf_status = nf_inq_varid(nf_fid,'valtime',nf_vid)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var valtime'
      endif
        nf_status = nf_get_var_double(nf_fid,nf_vid,valtime)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var valtime'
        return
      endif

c   variables of type char
c   -----------------------
c
c     variable        netcdf long name
c      asctime      
c
        nf_status = nf_inq_varid(nf_fid,'asctime',nf_vid)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var asctime'
      endif
        nf_status = nf_get_var_text(nf_fid,nf_vid,asctime)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var asctime'
        return
      endif
c
c     variable        netcdf long name
c      earth_shape  
c
        nf_status = nf_inq_varid(nf_fid,'earth_shape',nf_vid)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var earth_shape'
      endif
        nf_status = nf_get_var_text(nf_fid,nf_vid,earth_shape)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var earth_shape'
        return
      endif
c
c     variable        netcdf long name
c      grid_name    
c
        nf_status = nf_inq_varid(nf_fid,'grid_name',nf_vid)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var grid_name'
      endif
        nf_status = nf_get_var_text(nf_fid,nf_vid,grid_name)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var grid_name'
        return
      endif
c
c     variable        netcdf long name
c      grid_type    "grib-1 grid type"
c
        nf_status = nf_inq_varid(nf_fid,'grid_type',nf_vid)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var grid_type'
      endif
        nf_status = nf_get_var_text(nf_fid,nf_vid,grid_type)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var grid_type'
        return
      endif
c
c     variable        netcdf long name
c      origin_name  
c
        nf_status = nf_inq_varid(nf_fid,'origin_name',nf_vid)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var origin_name'
      endif
        nf_status = nf_get_var_text(nf_fid,nf_vid,origin_name)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var origin_name'
        return
      endif
c
c     variable        netcdf long name
c      process_name 
c
        nf_status = nf_inq_varid(nf_fid,'process_name',nf_vid)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var process_name'
      endif
        nf_status = nf_get_var_text(nf_fid,nf_vid,process_name)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var process_name'
        return
      endif
c
c     variable        netcdf long name
c      ref_comment  
c
        nf_status = nf_inq_varid(nf_fid,'ref_comment',nf_vid)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var ref_comment'
      endif
        nf_status = nf_get_var_text(nf_fid,nf_vid,ref_comment)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var ref_comment'
        return
      endif
c
c     variable        netcdf long name
c      x_dim        "longitude dimension"
c
        nf_status = nf_inq_varid(nf_fid,'x_dim',nf_vid)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var x_dim'
      endif
        nf_status = nf_get_var_text(nf_fid,nf_vid,x_dim)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var x_dim'
        return
      endif
c
c     variable        netcdf long name
c      y_dim        "latitude dimension"
c
        nf_status = nf_inq_varid(nf_fid,'y_dim',nf_vid)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var y_dim'
      endif
        nf_status = nf_get_var_text(nf_fid,nf_vid,y_dim)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var y_dim'
        return
      endif

      nf_status = nf_close(nf_fid)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'nf_close'
        return
      endif

      istatus = 1

      return
      end
c
c ***************************************************************
c
      subroutine get_rdr_dims(cfname,x,y,z,record,istatus)

      include 'netcdf.inc'
      integer x,y,z,record,nf
      integer  nf_fid, nf_vid, nf_status

      character*(*) cfname

      istatus=0  !return error status 
c
c  open netcdf file for reading
c
      nf_status = nf_open(cfname,nf_nowrite,nf_fid)
      if(nf_status.ne.nf_noerr) then
        call s_len(cfname,nf)
        print *, nf_strerror(nf_status)
        print *,'nf_open',cfname(1:nf)
        return
      endif

c   dimension variables
c
c get size of record
c
      nf_status = nf_inq_dimid(nf_fid,'record',nf_vid)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'dim record'
      endif
      nf_status = nf_inq_dimlen(nf_fid,nf_vid,record)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'dim record'
        return
      endif
c
c get size of x
c
      nf_status = nf_inq_dimid(nf_fid,'x',nf_vid)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'dim x'
      endif
      nf_status = nf_inq_dimlen(nf_fid,nf_vid,x)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'dim x'
        return
      endif
c
c get size of y
c
      nf_status = nf_inq_dimid(nf_fid,'y',nf_vid)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'dim y'
      endif
      nf_status = nf_inq_dimlen(nf_fid,nf_vid,y)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'dim y'
        return
      endif
c
c get size of z
c
      nf_status = nf_inq_dimid(nf_fid,'z',nf_vid)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'dim z'
      endif
      nf_status = nf_inq_dimlen(nf_fid,nf_vid,z)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'dim z'
        return
      endif
c
c close file
c
      nf_status = nf_close(nf_fid)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'nf_close'
        return
      endif

      istatus = 1
      return
      end
c 
c ************************************************************************
c
      subroutine read_rdr_data(cfname,x,y,z,record,ref,istatus)
c
c
      integer nf_fid,x,y,z,record
      integer  ref(x, y, z, record)
      integer istatus
      character*(*) cfname

      istatus = 0  !default error return
c
c  open netcdf file for reading
c
      nf_status = nf_open(cfname,nf_nowrite,nf_fid)
      if(nf_status.ne.nf_noerr) then
        call s_len(cfname,nf)
        print *, nf_strerror(nf_status)
        print *,'nf_open ',cfname(1:nf)
        return
      endif
c
c     variable        netcdf long name
c      ref          "nowrad 2d radar reflectivity"
c
        nf_status = nf_inq_varid(nf_fid,'ref',nf_vid)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var ref'
      endif
        nf_status = nf_get_var_real(nf_fid,nf_vid,ref)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'in var ref'
        return
      endif
c
c close file
c
      nf_status = nf_close(nf_fid)
      if(nf_status.ne.nf_noerr) then
        print *, nf_strerror(nf_status)
        print *,'nf_close'
        return
      endif

      istatus = 1
      return
      end
