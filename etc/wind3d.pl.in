#!@PERL@
# @configure_input@

$root = shift;
$hr = shift;
if (defined $root) {
  if ($root =~ /^p$/i) {$logdir = "/data/lapb/parallel/laps/data/log";}
  elsif ($root =~ /^o$/i) {$logdir = "/data/lapb/operational/laps/data/log";}
  else {$logdir = $root . "/data/log"; } }
else {$logdir = "/data/lapb/operational/laps/data/log"; } 

# Get the most recent log file.

$logname = "wind";
@filenames = <$logdir/$logname.log*>;
$nfiles = @filenames;
if ($nfiles == 0) {die "No log files found.\n"}
$age_of_newest = 1;
foreach $file (@filenames) {
  $age = -M $file;
  if ($age < $age_of_newest) {
    $filename = $file;
    $age_of_newest = $age; } }

$tail = `tail -1 $filename`;
if ($tail !~ /End of LAPS Wind Analysis/) {
  die "Wind analysis is in progress...\n";}

# This isn't kosher, but it's okay for now:
if (defined $hr) {$filename = $logdir."/".$logname.".log.".$hr."20";}

open(FILE,$filename) or die "Can't open $filename.";
@lines = <FILE>;
close FILE;
print "\nReading from log file $filename\n\n";

# Determine background model.

$modeltype = "missing";
$searchstring = "Successfully obtained: ";
foreach (@lines) {
  if (/$searchstring(.*)/) {
    ($modeltime,$modeltype) = split(" ",$1); 
    last; } }
if ($modeltype eq "missing") {die "Can't determine model background ..."}
print "BACKGROUND FIELDS:  ";

if ($modeltype =~ /ram/) {
  if ($modeltime =~ /(\d\d\d\d\d)(\d\d\d\d)(\d\d\d\d)/ ) {
    $runtime = $2+0;
    $fcsthr = $3/100;
    print "Using $fcsthr hr fcst from local model started at $runtime UTC \n";
    print "(local model file timestamp = $modeltime)\n"; } } 
else {
  $bgmodelfile = $filename;
  $bgmodelfile =~ s/$logname/lga/;
  open(BGMODEL,$bgmodelfile) or die "Can't open $bgmodelfile.";
  foreach (<BGMODEL>) {
    if (/cmodel (.*)/) {
      $modelid = $1;
      $modelid =~ s/\ //g; }
    if (/Reading - (.*)/) {
      $pathname = $1; last; close BGMODEL; } }
  $basename = $1 if ($pathname =~ /([^\/]*)$/);
  if ($basename =~ /(\d\d\d\d\d)(\d\d\d\d)(\d\d)(\d\d)/) {
    $runtime = $2/100;
    $fcsthr = $4;
    print "Using $fcsthr hr fcst from $modelid started at $runtime UTC \n"; } 
  else {
    print "$modelid (Sorry -- can't decode model filename)\n"; } }

# Doppler radars.

print "\nDoppler radars:  ";
$searchstring = "Retrieved radar Names: ";
$found = 0;
foreach (@lines) {
  if (/$searchstring(.*)/) {
    print "$1\n"; $found=1; last; }}
if ($found == 0) {print "none\n";}

# Radar profiles, including VADs.

foreach (@lines) {
  if (/PROFILER/) {
    @list = split;
    push(@profilers,$list[9]);
    push(@profilernums,$list[2]);
    next;}
  if (/VAD/) {
    @list = split;
    push(@vads,$list[9]);
    push(@vadnums,$list[2]);
    next; } }

print "\nProfilers:  ";
$searchstring = "Remapping profile ";
foreach (@lines) {
  if (/$searchstring(.*)/) {
    ($profilenum,$lapsi,$lapsj) = split(" ",$1);
    $i=0;
    foreach $item (@profilernums) {
#     if ($profilenum eq $item) {print "$profilers[$i], $lapsi, $lapsj \n";}
      if ($profilenum eq $item) {print "$profilers[$i] ";}
      $i=$i+1; } } }
print "\n";

print "\nVADs:  ";
#$nvads=@vads; $i=0;
#while ($i < $nvads) {print "$vadnums[$i], $vads[$i] \n"; $i=$i+1;}
$searchstring = "Remapping profile ";
foreach (@lines) {
  if (/$searchstring(.*)/) {
    ($profilenum,$lapsi,$lapsj) = split(" ",$1);
    $i=0;
    foreach $item (@vadnums) {
#     if ($profilenum eq $item) {print "$vads[$i], $lapsi, $lapsj \n";}
      if ($profilenum eq $item) {print "$vads[$i] ";}
      $i=$i+1; } } }
print "\n";

# SAO's (METAR's).

$searchstring = "Mapping Sao Obs";
$i=0; $found=0;
foreach (@lines) {
  if (/$searchstring/) {$found=1; last;}
  else {$i=$i+1;} }

if ($found == 1) {
  $end=0;
  $i=$i+2;
  while ($end == 0) {
    if ($lines[$i] =~ /Elapsed/) {$end=1;}
    else {
      ($dummy,$num,$name,$lapsi,$lapsj) = split /\s+/,$lines[$i] ;
      if ($lapsi > 0) {push(@saos,$name); } }
    $i=$i+1; } }

print "\nSAOs:  ";
$nsao = @saos;
if ($nsao == 0) {print "none";}
else {
  @saos = sort(@saos);
  $count=0;
  foreach (@saos) {
    print "$_ "; 
    $count=$count+1;
    if ($count > 15) {print "\n       "; $count=0; } } }
print "\n";

# ACARS and cloud-drift winds.

$searchstring = "Cumulative # obs =";
$found1 = 0;
$found2 = 0;
foreach (@lines) {
  if (/$searchstring(.*)/) {
    if ($found1 == 0) {
      $found1 = 1; $nacars = $1 + 0; }
    else {
      $found2 = 1; $nclouddriftwinds = $1 - $nacars; last; } } }

print "\nACARS:  ";
if ($found1 == 1) {print "$nacars \n";}
else {print "none \n";}

print "\nCloud-drift winds:  ";
if ($found2 == 1) {print "$nclouddriftwinds \n";}
else {print "none \n";}
print "\n";
