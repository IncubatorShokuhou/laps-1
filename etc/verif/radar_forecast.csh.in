#!@CSH@

# First argument is $LAPS_DATA_ROOT

# Second argument is number of forecast time steps

# Third argument is the type of statistic

# Fourth argument is Y range upper limit

# Fifth argument is Reflectivity in dbz

setenv LAPSINSTALLROOT @prefix@                                                     
setenv LAPS_DATA_ROOT $1
setenv NLINE $2
setenv STAT $3
setenv YRANGE $4
setenv REFLECTIVITY $5

#setenv LAPS_DATA_ROOT /data/fab/projects/dwr
setenv LOGDIR $LAPS_DATA_ROOT/log

setenv MODELTIME      `head -1 $LAPS_DATA_ROOT/time/modeltime.dat`
setenv MODELTIME_HHMM `head -1 $LAPS_DATA_ROOT/time/modeltime.dat | cut -c6-9`

setenv MODEL_ASCIITIME `tail -1 $LAPS_DATA_ROOT/time/modeltime.dat`

#setenv model wrf-wsm6
#setenv fcsttime 01

setenv STAT_LC `echo $STAT | gawk '{print tolower($0)}'`

setenv FILE $LAPS_DATA_ROOT/lapsprd/verif/REF/plot/$REFLECTIVITY/$MODELTIME.$STAT_LC             
setenv MEMBERS_FILE $LAPS_DATA_ROOT/lapsprd/verif/members.txt                                   

echo " "
echo "inputs..."
echo "FILE = $FILE"  
ls -l $FILE                                                     

@ NLINE = $NLINE + 1

# obtain xrange times from the data file
setenv STARTTIME1 `head -1       $FILE           | cut -c1-11` ; echo $STARTTIME1
setenv STARTTIME2 `head -1       $FILE           | cut -c13-23`; echo $STARTTIME2
setenv STOPTIME1  `head -$NLINE $FILE | tail -1 | cut -c1-11` ; echo $STOPTIME1
setenv STOPTIME2  `head -$NLINE $FILE | tail -1 | cut -c13-23`; echo $STOPTIME2

echo " "
echo "Start time: $STARTTIME1 $STARTTIME2"
echo "Stop  time: $STOPTIME1 $STOPTIME2 NLINE is $NLINE"

# Construct gnuplot .gp file
# Fonts are: tiny small medium large giant                                    
setenv GNUPLOTFILE $LAPS_DATA_ROOT/lapsprd/verif/REF/plot/$REFLECTIVITY/radar_fcst_$STAT_LC\_$REFLECTIVITY\_$MODELTIME.gp
setenv PNGDIR      $LAPS_DATA_ROOT/lapsprd/verif/REF/plot/
setenv PNGFILE     radar_fcst_$STAT_LC\_$REFLECTIVITY\_$MODELTIME.png
setenv DQUOTE \"

echo 'set terminal png size 1200,600'                                     > $GNUPLOTFILE
echo 'set xdata time'                                                    >> $GNUPLOTFILE
echo 'set timefmt "%d-%b-%Y %H:%M:%S"'                                   >> $GNUPLOTFILE
echo 'set output '$DQUOTE$PNGDIR$PNGFILE$DQUOTE                          >> $GNUPLOTFILE

# time range must be in same format as data file
echo 'set xrange ['$DQUOTE$STARTTIME1' '$STARTTIME2$DQUOTE':'$DQUOTE$STOPTIME1' '$STOPTIME2$DQUOTE']' >> $GNUPLOTFILE
echo 'set yrange [0:'$YRANGE']'                                          >> $GNUPLOTFILE
if ($STAT == "Bias") then
    echo 'set ytics (0.5,1,2,4,6,8,10)'                                  >> $GNUPLOTFILE
endif
echo 'set grid'                                                          >> $GNUPLOTFILE
echo 'set datafile missing "-999.000"'                                   >> $GNUPLOTFILE
echo 'set xlabel "Initialized '$MODEL_ASCIITIME' UTC"'                   >> $GNUPLOTFILE
echo 'set ylabel "Radar Reflectivity '$STAT'"'                           >> $GNUPLOTFILE
echo 'set title "Radar Reflectivity '$REFLECTIVITY'dBZ '$STAT'"'        >> $GNUPLOTFILE
#cho 'set title "Radar Reflectivity '$REFLECTIVITY'dBZ '$STAT'" giant'   >> $GNUPLOTFILE
#cho 'set title "Radar Reflectivity '$REFLECTIVITY'dBZ '$STAT'" font DejaVuSans 30'   >> $GNUPLOTFILE
echo 'set key left box'                                                  >> $GNUPLOTFILE

setenv NMEMBERS `wc -l $MEMBERS_FILE | cut -c1-2`
echo "NMEMBERS: $NMEMBERS"

setenv IMEMBER 1
while ($IMEMBER <= $NMEMBERS)  
#   setenv ICOL $IMEMBER
    @ ICOL = $IMEMBER + 2
    
    setenv MEMBER `head -$IMEMBER $MEMBERS_FILE | tail -1`
    echo "IMEMBER MEMBER ICOL: $IMEMBER $MEMBER $ICOL"

    if ($NMEMBERS == 1) then
        echo 'plot '$DQUOTE$FILE$DQUOTE' using 1:'$ICOL'  title "'$MEMBER'" with linespoints lw 3 lt '$IMEMBER' pt 5 ps 1'       >> $GNUPLOTFILE
    else if ($IMEMBER == 1) then
        echo 'plot '$DQUOTE$FILE$DQUOTE' using 1:'$ICOL'  title "'$MEMBER'" with linespoints lw 3 lt '$IMEMBER' pt 5 ps 1, \'    >> $GNUPLOTFILE
    else if ($IMEMBER == $NMEMBERS) then
        echo '     '$DQUOTE$FILE$DQUOTE' using 1:'$ICOL'  title "'$MEMBER'" with linespoints lw 3 lt '$IMEMBER' pt 5 ps 1'       >> $GNUPLOTFILE
    else
        echo '     '$DQUOTE$FILE$DQUOTE' using 1:'$ICOL'  title "'$MEMBER'" with linespoints lw 3 lt '$IMEMBER' pt 5 ps 1, \'    >> $GNUPLOTFILE
    endif

    @ IMEMBER = $IMEMBER + 1

end

# Run gnuplot
gnuplot < $GNUPLOTFILE

echo " "
echo "outputs..."
ls -l $GNUPLOTFILE
ls -l $PNGDIR$PNGFILE
ls -l $PNGDIR/radar_fcst_$STAT_LC\_$REFLECTIVITY.png

cd $PNGDIR
rm -f          radar_fcst_$STAT_LC\_$REFLECTIVITY.png
ln -s $PNGFILE radar_fcst_$STAT_LC\_$REFLECTIVITY.png

rm -f          radar_fcst_$STAT_LC\_$REFLECTIVITY\_$MODELTIME_HHMM.png
ln -s $PNGFILE radar_fcst_$STAT_LC\_$REFLECTIVITY\_$MODELTIME_HHMM.png

convert -resize 90x60! $PNGFILE radar_fcst_$STAT_LC\_$REFLECTIVITY\_$MODELTIME_HHMM\_thumb.png
