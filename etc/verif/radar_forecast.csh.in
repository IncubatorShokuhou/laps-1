#!@CSH@

# First argument is $LAPS_DATA_ROOT

# Second argument is number of forecast time steps

# Third argument is the type of statistic

# Fourth argument is Y range upper limit

# Fifth argument is Reflectivity in dbz

# Sixth argument is domain name

setenv LAPSINSTALLROOT @prefix@                                                     
setenv LAPS_DATA_ROOT $1
setenv NLINE $2
setenv STAT $3
setenv YRANGE $4
setenv REFLECTIVITY $5
setenv DOMAIN_NAME_IN $6

setenv DOMAIN_NAME `echo $DOMAIN_NAME_IN | sed 's/_/ /g'`

#setenv LAPS_DATA_ROOT /data/fab/projects/dwr
setenv LOGDIR $LAPS_DATA_ROOT/log

setenv MODELTIME      `head -1 $LAPS_DATA_ROOT/time/modelvtime.dat`
setenv MODELTIME_HHMM `head -1 $LAPS_DATA_ROOT/time/modelvtime.dat | cut -c6-9`

setenv MODEL_ASCIITIME `tail -1 $LAPS_DATA_ROOT/time/modelvtime.dat`

#setenv model wrf-wsm6
#setenv fcsttime 01

setenv STAT_LC `echo $STAT | gawk '{print tolower($0)}'`

setenv FILE $LAPS_DATA_ROOT/lapsprd/verif/REF/plot/$REFLECTIVITY/$MODELTIME.$STAT_LC             
setenv MEMBERS_FILE $LAPS_DATA_ROOT/lapsprd/verif/members.txt                                   

# Setup True Type fonts and related environment variables
if (-d /usr/X11R6/lib/X11/fonts/truetype) then
    setenv GDFONTPATH /usr/X11R6/lib/X11/fonts/truetype
else if (-d /usr/share/fonts/bitstream-vera) then
    setenv GDFONTPATH /usr/share/fonts/bitstream-vera
else
    setenv GDFONTPATH /dev/null
endif
#setenv GDFONTPATH /dev/null

setenv GNUPLOT_DEFAULT_GDFONT VeraBd
setenv FONTFILE $GDFONTPATH/$GNUPLOT_DEFAULT_GDFONT.ttf

if (-e $FONTFILE) then
    echo "GNUPLOT FONT is $FONTFILE"
#   setenv TERM_FONT 'enhanced font "VeraBd, 12"'
    setenv TERM_FONT 'enhanced'
    setenv DEFAULT_FONT 'font "VeraBd,12"'
    setenv TITLE_FONT 'font "VeraBd,20"'
    setenv MEMBER_FONT 'font "VeraBd,16"'
#   setenv KEY_FONT 'font "VeraBd,8"'
    setenv KEY_WIDTH 0   
    setenv KEY_HEIGHT 0.3
    setenv KEY_SPACING 0.7
    setenv TH "{/VeraBd=8 "
    setenv TF \}
else
    echo "FONTFILE $FONTFILE does not exist"
    setenv TERM_FONT ""
    setenv DEFAULT_FONT ""
    setenv TITLE_FONT ""
    setenv MEMBER_FONT ""
    setenv KEY_FONT ""
    setenv KEY_WIDTH 1
    setenv KEY_HEIGHT 0
    setenv KEY_SPACING 1.0
    setenv TH ""
    setenv TF ""
endif

if (     $REFLECTIVITY == "20_comp"  || $REFLECTIVITY == "30_comp"  || $REFLECTIVITY == "40_comp" ) then
    setenv SUMMARY_FILE $LAPS_DATA_ROOT/lapsprd/verif/REF/plot/summary_comp.txt
    setenv REF `echo $REFLECTIVITY | cut -c1-2`
    setenv DURATION "7-day "
else if ($REFLECTIVITY == "20_comp2" || $REFLECTIVITY == "30_comp2" || $REFLECTIVITY == "40_comp2") then
    setenv SUMMARY_FILE $LAPS_DATA_ROOT/lapsprd/verif/REF/plot/summary_comp2.txt
    setenv REF `echo $REFLECTIVITY | cut -c1-2`
    setenv DURATION "30-day "
else
    setenv SUMMARY_FILE /dev/null
    setenv L_PLOT_CRITERIA T  
    setenv REF $REFLECTIVITY                             
    setenv DURATION ""
endif

if ($SUMMARY_FILE != /dev/null && -e $SUMMARY_FILE) then # Percentage will be present
    setenv L_PLOT_CRITERIA `tail -1 $SUMMARY_FILE`
#   setenv L_PLOT_CRITERIA T  # for testing
    if ($KEY_WIDTH == 0) then # TrueType case
        setenv KEY_WIDTH -16 
    endif
else                                                     # Percentage will not be present
    if ($KEY_WIDTH == 0) then # TrueType case
        setenv KEY_WIDTH -14 
    endif
endif

echo " "
echo "inputs..."
echo "FILE = $FILE"  
ls -l $FILE                                                     
if (! -e $FILE) then
    echo "input file $FILE does not exist - exiting..."
    exit
endif

@ NLINE = $NLINE + 1

# obtain xrange times from the data file
setenv STARTTIME1 `head -2      $FILE | tail -1 | cut -c1-11` ; echo $STARTTIME1
setenv STARTTIME2 `head -2      $FILE | tail -1 | cut -c13-23`; echo $STARTTIME2
setenv STOPTIME1  `head -$NLINE $FILE | tail -1 | cut -c1-11` ; echo $STOPTIME1
setenv STOPTIME2  `head -$NLINE $FILE | tail -1 | cut -c13-23`; echo $STOPTIME2

echo " "
echo "Start time: $STARTTIME1 $STARTTIME2"
echo "Stop  time: $STOPTIME1 $STOPTIME2 NLINE is $NLINE"

# Construct gnuplot .gp file
# Fonts are: tiny small medium large giant                                    
setenv GNUPLOTFILE $LAPS_DATA_ROOT/lapsprd/verif/REF/plot/$REFLECTIVITY/radar_fcst_$STAT_LC\_$REFLECTIVITY\_$MODELTIME.gp
setenv PNGDIR      $LAPS_DATA_ROOT/lapsprd/verif/REF/plot/
setenv PNGFILE     radar_fcst_$STAT_LC\_$REFLECTIVITY\_$MODELTIME.png
setenv DQUOTE \"

echo 'set terminal png '$TERM_FONT' size 1200,600'                        > $GNUPLOTFILE
echo 'set xdata time'                                                    >> $GNUPLOTFILE
echo 'set timefmt "%d-%b-%Y %H:%M:%S"'                                   >> $GNUPLOTFILE
echo 'set format x "%H:%M"'                                              >> $GNUPLOTFILE
echo 'set output '$DQUOTE$PNGDIR$PNGFILE$DQUOTE                          >> $GNUPLOTFILE

# time range must be in same format as data file
echo 'set xrange ['$DQUOTE$STARTTIME1' '$STARTTIME2$DQUOTE':'$DQUOTE$STOPTIME1' '$STOPTIME2$DQUOTE']' >> $GNUPLOTFILE
echo 'set yrange [0:'$YRANGE']'                                          >> $GNUPLOTFILE
if ($STAT == "Bias") then
    echo 'set yrange [0.1:'$YRANGE']'                                    >> $GNUPLOTFILE
    echo 'set ytics (0.1,0.2,0.5,1,2,5,10)'                              >> $GNUPLOTFILE
    echo 'set logscale y'                                                >> $GNUPLOTFILE
else
    echo 'set yrange [0:'$YRANGE']'                                      >> $GNUPLOTFILE
endif
echo 'set grid'                                                          >> $GNUPLOTFILE
echo 'set datafile missing "-999.000"'                                   >> $GNUPLOTFILE
if ($DURATION == "") then
    echo 'set xlabel "Initialized '$MODEL_ASCIITIME' UTC"' $MEMBER_FONT textcolor lt 2      >> $GNUPLOTFILE
else
    echo 'set xlabel "Ending on '$MODEL_ASCIITIME' UTC"' $MEMBER_FONT textcolor lt 2      >> $GNUPLOTFILE
endif
echo 'set ylabel "Volume Reflectivity '$STAT'"'  $MEMBER_FONT textcolor lt 2      >> $GNUPLOTFILE
echo 'set title "Radar 3-D Reflectivity '$REF'dBZ '$DURATION$STAT' ('$DOMAIN_NAME' domain)" '$TITLE_FONT >> $GNUPLOTFILE
echo 'set key left box'                                                  >> $GNUPLOTFILE
echo 'set key spacing' $KEY_SPACING                                      >> $GNUPLOTFILE
echo 'set key height' $KEY_HEIGHT                                        >> $GNUPLOTFILE
echo 'set key width' $KEY_WIDTH                                          >> $GNUPLOTFILE

setenv NMEMBERS `wc -l $MEMBERS_FILE | cut -c1-2`
echo "NMEMBERS: $NMEMBERS"

setenv IMEMBER 1
while ($IMEMBER <= $NMEMBERS)  
#   setenv ICOL $IMEMBER
    @ ICOL = $IMEMBER + 2
    
    setenv MEMBER `head -$IMEMBER $MEMBERS_FILE | tail -1`

#   if ($MEMBER == persistence) then # shorten appearance in the title
#       setenv MEMBER persist 
#   endif

    if ($SUMMARY_FILE != /dev/null && -e $SUMMARY_FILE) then # Percentage will be present
        setenv PCT `head -$IMEMBER $SUMMARY_FILE | tail -1`
        setenv TITLE "`echo $MEMBER | sed 's/_/ /g'` $PCT%"

        if ($PCT >= 80) then
            setenv LS 1
            setenv LW 3
        else 
            setenv LS 2
            setenv LW 1
        endif

    else                                                     # Percentage not present
        setenv PCT ""
        setenv TITLE `echo $MEMBER | sed 's/_/ /g'`
        setenv LS 1
        setenv LW 3

    endif

    echo "IMEMBER MEMBER ICOL TITLE: $IMEMBER $MEMBER $ICOL $TITLE"

    if ($NMEMBERS == 1) then
        echo 'plot '$DQUOTE$FILE$DQUOTE' index 0 using 1:'$ICOL'  title "'"$TH"$TITLE$TF'" with linespoints lw '$LW' lt '$IMEMBER' pt 5 ps 1'       >> $GNUPLOTFILE
    else if ($IMEMBER == 1) then
        echo 'plot '$DQUOTE$FILE$DQUOTE' index 0 using 1:'$ICOL'  title "'"$TH"$TITLE$TF'" with linespoints lw '$LW' lt '$IMEMBER' pt 5 ps 1, \'    >> $GNUPLOTFILE
    else if ($IMEMBER == $NMEMBERS) then
        echo '     '$DQUOTE$FILE$DQUOTE' index 0 using 1:'$ICOL'  title "'"$TH"$TITLE$TF'" with linespoints lw '$LW' lt '$IMEMBER' pt 5 ps 1'       >> $GNUPLOTFILE
    else
        echo '     '$DQUOTE$FILE$DQUOTE' index 0 using 1:'$ICOL'  title "'"$TH"$TITLE$TF'" with linespoints lw '$LW' lt '$IMEMBER' pt 5 ps 1, \'    >> $GNUPLOTFILE
    endif

    @ IMEMBER = $IMEMBER + 1

end

# Run gnuplot
gnuplot < $GNUPLOTFILE

echo " "
echo "outputs..."
ls -l $GNUPLOTFILE
ls -l $PNGDIR$PNGFILE
ls -l $PNGDIR/radar_fcst_$STAT_LC\_$REFLECTIVITY.png

if ($L_PLOT_CRITERIA == "F") then
    echo "exiting to skip links, thumbnail, and animation sections - plot criteria flag is false"
endif

cd $PNGDIR
rm -f          radar_fcst_$STAT_LC\_$REFLECTIVITY.png
ln -s $PNGFILE radar_fcst_$STAT_LC\_$REFLECTIVITY.png

rm -f          radar_fcst_$STAT_LC\_$REFLECTIVITY\_$MODELTIME_HHMM.png
ln -s $PNGFILE radar_fcst_$STAT_LC\_$REFLECTIVITY\_$MODELTIME_HHMM.png

# Make Thumbnail
rm -f                            radar_fcst_$STAT_LC\_$REFLECTIVITY\_$MODELTIME_HHMM\_thumb.png
convert -resize 105x70! $PNGFILE radar_fcst_$STAT_LC\_$REFLECTIVITY\_$MODELTIME_HHMM\_thumb.png

# Make Animation
convert -delay 100 -loop 0 `ls -rt radar_fcst_$STAT_LC\_$REFLECTIVITY\_???[0-9].png` $PNGFILE anim24hr_radar_fcst_$STAT_LC\_$REFLECTIVITY.gif
