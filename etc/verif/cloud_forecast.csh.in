#!@CSH@

# First argument is $LAPS_DATA_ROOT

# Second argument is number of forecast time steps

# Third argument is domain name

setenv LAPSINSTALLROOT @prefix@
setenv LAPS_DATA_ROOT $1
setenv NLINE $2
setenv DOMAIN_NAME_IN $3

setenv DOMAIN_NAME `echo $DOMAIN_NAME_IN | sed 's/_/ /g'`

#setenv LAPS_DATA_ROOT /data/fab/projects/dwr
setenv LOGDIR $LAPS_DATA_ROOT/log

setenv MODELTIME      `head -1 $LAPS_DATA_ROOT/time/modelvtime.dat`
setenv MODELTIME_HHMM `head -1 $LAPS_DATA_ROOT/time/modelvtime.dat | cut -c6-9`

setenv MODEL_ASCIITIME `tail -1 $LAPS_DATA_ROOT/time/modelvtime.dat`


setenv FILE $LAPS_DATA_ROOT/lapsprd/verif/SWI/pt/$MODELTIME.stats
setenv MEMBERS_FILE $LAPS_DATA_ROOT/lapsprd/verif/members.txt

# Setup True Type fonts and related environment variables
if (-d /usr/X11R6/lib/X11/fonts/truetype) then
    setenv GDFONTPATH /usr/X11R6/lib/X11/fonts/truetype
else if (-d /usr/share/fonts/bitstream-vera) then
    setenv GDFONTPATH /usr/share/fonts/bitstream-vera  
else
    setenv GDFONTPATH /dev/null
endif
#setenv GDFONTPATH /dev/null

setenv GNUPLOT_DEFAULT_GDFONT VeraBd                
setenv FONTFILE $GDFONTPATH/$GNUPLOT_DEFAULT_GDFONT.ttf

if (-e $FONTFILE) then
    echo "GNUPLOT FONT is $FONTFILE"                                    
#   setenv TERM_FONT 'enhanced font "VeraBd, 12"'
    setenv TERM_FONT 'enhanced'
    setenv DEFAULT_FONT 'font "VeraBd,12"'
    setenv TITLE_FONT 'font "VeraBd,20"'
    setenv MEMBER_FONT 'font "VeraBd,16"'
#   setenv KEY_FONT 'font "VeraBd,8"'
    setenv KEY_WIDTH -19 
    setenv KEY_HEIGHT 0.3
    setenv KEY_SPACING 0.7
    setenv TH "{/VeraBd=8 "
    setenv TF \}
else
    echo "FONTFILE $FONTFILE does not exist"
    setenv TERM_FONT ""                             
    setenv DEFAULT_FONT ""
    setenv TITLE_FONT ""
    setenv MEMBER_FONT ""
    setenv KEY_FONT ""
    setenv KEY_WIDTH 1
    setenv KEY_HEIGHT 0
    setenv KEY_SPACING 1.0
    setenv TH ""             
    setenv TF ""
endif

echo " "
echo "inputs..."
echo "FILE = $FILE"
ls -l $FILE

@ NLINE = $NLINE + 1

# obtain xrange times from the data file
setenv STARTTIME1 `head -1       $FILE           | cut -c2-12` ; echo $STARTTIME1
setenv STARTTIME2 `head -1       $FILE           | cut -c14-24`; echo $STARTTIME2
setenv STOPTIME1  `head -$NLINE $FILE | tail -1 | cut -c1-12` ; echo $STOPTIME1
setenv STOPTIME2  `head -$NLINE $FILE | tail -1 | cut -c14-24`; echo $STOPTIME2

setenv NMEMBERS `wc -l $MEMBERS_FILE | cut -c1-2`
echo "NMEMBERS: $NMEMBERS"

# Construct gnuplot .gp file
#setenv GNUPLOTFILE $LOGDIR/cloud_fcst.gp

setenv VAR SWI
setenv VAR_LC swi
setenv TYPE pt
setenv GNUPLOTFILE $LAPS_DATA_ROOT/lapsprd/verif/$VAR/$TYPE/$VAR_LC\_$TYPE\_fcst.gp
setenv PNGDIR      $LAPS_DATA_ROOT/lapsprd/verif/$VAR/$TYPE/
mkdir -p $PNGDIR
setenv PNGFILE     $VAR_LC\_$TYPE\_fcst\_$MODELTIME.png

setenv DQUOTE \"
echo 'set terminal png '$TERM_FONT' size 1200,800'                        > $GNUPLOTFILE
echo 'set xdata time'                                                    >> $GNUPLOTFILE
echo 'set timefmt "%d-%b-%Y %H:%M:%S"'                                   >> $GNUPLOTFILE
echo 'set format x "%H:%M"'                                              >> $GNUPLOTFILE
#echo 'set output '$DQUOTE$LOGDIR'/cloud_fcst.png'$DQUOTE                 >> $GNUPLOTFILE
echo 'set output '$DQUOTE$PNGDIR$PNGFILE$DQUOTE                          >> $GNUPLOTFILE

# time range must be in same format as data file
#echo 'set xrange ["2-FEB-2011 12:00:00.00":"2-FEB-2011 18:00:00.00"]'    >> $GNUPLOTFILE
echo 'set xrange ['$DQUOTE$STARTTIME1' '$STARTTIME2$DQUOTE':'$DQUOTE$STOPTIME1' '$STOPTIME2$DQUOTE']' >> $GNUPLOTFILE
echo 'set yrange [0:1000]'                                               >> $GNUPLOTFILE
echo 'set grid'                                                          >> $GNUPLOTFILE
echo 'set datafile missing "-99.900"'                                     >> $GNUPLOTFILE
echo 'set xlabel "Initialized '$MODEL_ASCIITIME' UTC"' $MEMBER_FONT textcolor lt 2 >> $GNUPLOTFILE
echo 'set ylabel "GHI (W/m**2)"' $MEMBER_FONT textcolor lt 2 >> $GNUPLOTFILE
echo 'set title "Global Horizontal Irradiance Observed vs Forecast ('$DOMAIN_NAME' domain)"' $TITLE_FONT >> $GNUPLOTFILE
#echo 'set key left box'                                                  >> $GNUPLOTFILE
echo 'set key box'                                                        >> $GNUPLOTFILE
echo 'set key spacing' $KEY_SPACING                                                                    >> $GNUPLOTFILE
echo 'set key height' $KEY_HEIGHT                                                                      >> $GNUPLOTFILE
echo 'set key width' $KEY_WIDTH                                                                        >> $GNUPLOTFILE

setenv T1 "Fcst Mean"
setenv T2 "Obs Mean"
setenv T3 "RMS (F-O)"


#echo 'plot '$DQUOTE$FILE$DQUOTE' using 1:3 title "Forecast" with linespoints lw 3 pt 5 ps 1, \' >> $GNUPLOTFILE
#echo        $DQUOTE$FILE$DQUOTE' using 1:4 title "Observed" with linespoints lw 3 pt 5 ps 1, \' >> $GNUPLOTFILE
#echo        $DQUOTE$FILE$DQUOTE' using 1:5 title "RMSE"     with linespoints lw 3 pt 5 ps 1'    >> $GNUPLOTFILE

setenv IMEMBER 1
while ($IMEMBER <= $NMEMBERS)
    @ IBLOCK = $IMEMBER - 1

    @ PT = $IMEMBER + 4

    if ($PT == 7) then
        @ PT = 4
    endif

    setenv MEMBER `head -$IMEMBER $MEMBERS_FILE | tail -1`
    echo "IMEMBER MEMBER IBLOCK: $IMEMBER $MEMBER $IBLOCK"

    if ($NMEMBERS == 1) then
        echo 'plot '$DQUOTE$FILE$DQUOTE' index '$IBLOCK' using 1:3 title "'"$TH"$T1 $MEMBER$TF'" with linespoints lw 3 pt '$PT' ps 2 lt 1, \' >> $GNUPLOTFILE
        echo        $DQUOTE$FILE$DQUOTE' index '$IBLOCK' using 1:4 title "'"$TH"$T2 $MEMBER$TF'" with linespoints lw 3 pt '$PT' ps 2 lt 2, \' >> $GNUPLOTFILE
        echo        $DQUOTE$FILE$DQUOTE' index '$IBLOCK' using 1:5 title "'"$TH"$T3 $MEMBER$TF'" with linespoints lw 3 pt '$PT' ps 2 lt 3'    >> $GNUPLOTFILE
    else if ($IMEMBER == 1) then
        echo 'plot '$DQUOTE$FILE$DQUOTE' index '$IBLOCK' using 1:3 title "'"$TH"$T1 $MEMBER$TF'" with linespoints lw 3 pt '$PT' ps 2 lt 1, \' >> $GNUPLOTFILE
        echo        $DQUOTE$FILE$DQUOTE' index '$IBLOCK' using 1:4 title "'"$TH"$T2 $MEMBER$TF'" with linespoints lw 3 pt '$PT' ps 2 lt 2, \' >> $GNUPLOTFILE
        echo        $DQUOTE$FILE$DQUOTE' index '$IBLOCK' using 1:5 title "'"$TH"$T3 $MEMBER$TF'" with linespoints lw 3 pt '$PT' ps 2 lt 3, \' >> $GNUPLOTFILE
    else if ($IMEMBER == $NMEMBERS) then
        echo '     '$DQUOTE$FILE$DQUOTE' index '$IBLOCK' using 1:3 title "'"$TH"$T1 $MEMBER$TF'" with linespoints lw 3 pt '$PT' ps 2 lt 1, \' >> $GNUPLOTFILE
        echo        $DQUOTE$FILE$DQUOTE' index '$IBLOCK' using 1:4 title "'"$TH"$T2 $MEMBER$TF'" with linespoints lw 3 pt '$PT' ps 2 lt 2, \' >> $GNUPLOTFILE
        echo        $DQUOTE$FILE$DQUOTE' index '$IBLOCK' using 1:5 title "'"$TH"$T3 $MEMBER$TF'" with linespoints lw 3 pt '$PT' ps 2 lt 3'    >> $GNUPLOTFILE
    else
        echo '     '$DQUOTE$FILE$DQUOTE' index '$IBLOCK' using 1:3 title "'"$TH"$T1 $MEMBER$TF'" with linespoints lw 3 pt '$PT' ps 2 lt 1, \' >> $GNUPLOTFILE
        echo        $DQUOTE$FILE$DQUOTE' index '$IBLOCK' using 1:4 title "'"$TH"$T2 $MEMBER$TF'" with linespoints lw 3 pt '$PT' ps 2 lt 2, \' >> $GNUPLOTFILE
        echo        $DQUOTE$FILE$DQUOTE' index '$IBLOCK' using 1:5 title "'"$TH"$T3 $MEMBER$TF'" with linespoints lw 3 pt '$PT' ps 2 lt 3, \' >> $GNUPLOTFILE
    endif

    @ IMEMBER = $IMEMBER + 1
end

# Run gnuplot
gnuplot < $GNUPLOTFILE

echo " "
echo "outputs..."
ls -l $GNUPLOTFILE
cd $PNGDIR
ls -l $PNGFILE                          

rm -f          $VAR_LC\_$TYPE\_fcst.png
ln -s $PNGFILE $VAR_LC\_$TYPE\_fcst.png

rm -f          $VAR_LC\_$TYPE\_fcst\_$MODELTIME_HHMM.png
ln -s $PNGFILE $VAR_LC\_$TYPE\_fcst\_$MODELTIME_HHMM.png

#convert -resize 90x60! $PNGFILE $VAR_LC\_$TYPE\_fcst\_$MODELTIME_HHMM\_thumb.png

echo " "
echo "outputs (old)..."
cp $PNGFILE $LOGDIR/cloud_fcst.png
ls -l $LOGDIR/cloud_fcst.png

