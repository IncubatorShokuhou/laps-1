#!@PERL@
# @configure_input@
#
# Insures that no more than $plimit  processes with the same name exist(s)  
# exits with a warning to stderr if the limit is exceeded  
#
use strict;
my $exe = shift || die "Program name and LAPS root directory required";
my $LAPSROOT=shift || die "LAPS root directory required";
require "$LAPSROOT/etc/fxa.pm";
umask 002;
my $fxa_sys =  &Get_env'fxa; #'

$ENV{LAPS_DATA_ROOT} = shift ;
$ENV{LAPS_DATA_ROOT} = "$LAPSROOT/data" if ! $ENV{LAPS_DATA_ROOT};
my $LAPS_DATA_ROOT = $ENV{LAPS_DATA_ROOT};
$ENV{PATH}.=":@NETCDFBIN@";
my($LAPS_LOG_PATH);
if($fxa_sys!=0){
    $LAPS_LOG_PATH = &Set_logdir'fxa; #'
}else{
    $LAPS_LOG_PATH = "$LAPS_DATA_ROOT/log";
}
#
# Make sure the requested program exists
#
unless(-x "$LAPSROOT/bin/$exe"){
    die "Program $LAPSROOT/bin/$exe not found or not executable";
}



#
# using 2 here makes sure that this process will run but also prevents cascading
#
my $plimit = 2;


my $machine = `uname`;
$machine =~ s/\s*$//;

if($machine eq "SunOS"){
    open(PIDF,"ps -a |");
}else{
    open(PIDF,"ps -ef |");
}
my @pid = grep(/$exe/,<PIDF>);
close(PIDF);

if($#pid>=$plimit){
    die "$exe already running with pid=$pid[0]";
}

my $hh = (gmtime)[2];
my $mm = (gmtime)[1];
my $hhmm = 100*$hh+$mm;
$hhmm = "0".$hhmm while(length($hhmm)<4);
my $log = $exe;
$log =~ s/\..*$/\.log\.$hhmm/;

my $sys = "$LAPSROOT/bin/$exe 1> $LAPS_LOG_PATH/$log 2>&1";

exec($sys);








