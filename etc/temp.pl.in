#!@PERL@
# @configure_input@

# Looks in logdir (from command line) or $LAPS_DATA_ROOT/log.
# The other command line argument is the hour of the LAPS run
# if not current.  Both command line arguments are optional;
# order doesn't matter.

$nargs = @ARGV;
if ($nargs == 0) {}
elsif ($nargs == 1) {
 $arg = shift;
 if ($arg =~ /^[0-9]*$/) {$hr=$arg;}
 else {$logdir = $arg;}
 }
elsif ($nargs == 2) {
 $arg1 = shift;
 $arg2 = shift;
 if ($arg1 =~ /^[0-9]*$/) {$hr=$arg1; $logdir=$arg2;}
 else {$hr=$arg2; $logdir=$arg1;}
 }
 
$LAPS_DATA_ROOT = $ENV{LAPS_DATA_ROOT};

if (defined $logdir) {
 if ($logdir = $LAPS_DATA_ROOT) {$logdir=$logdir."/log";}
 elsif (defined $LAPS_DATA_ROOT) {$logdir=$LAPS_DATA_ROOT."/log";}
 else {die "Can't find path to log data.\n";}
 }

if (defined $hr) {$hr="0".$hr if (length($hr)<2);}

# Get the most recent log file.

$logname = "temp";
@filenames = <$logdir/$logname.log*>;
$nfiles = @filenames;
if ($nfiles == 0) {die "No log files found.\n"}
$age_of_newest = 1;
foreach $file (@filenames) {
  $age = -M $file;
  if ($age < $age_of_newest) {
    $filename = $file;
    $age_of_newest = $age; } }

$tail = `tail -1 $filename`;
if ($tail !~ /No stability calculation done for LST file/) {
  die "Temperature analysis is in progress...\n";}

# This isn't kosher, but it's okay for now:
if (defined $hr) {$filename = $logdir."/".$logname.".log.".$hr."20";}

open(FILE,$filename) or die "Can't open $filename.";
@lines = <FILE>;
close FILE;
print "\nReading from log file $filename\n\n";

# Determine background model.

$modeltype = "missing";
$searchstring = "Successfully obtained: ";
foreach (@lines) {
  if (/$searchstring(.*)/) {
    ($modeltime,$modeltype) = split(" ",$1); 
    last; } }
if ($modeltype eq "missing") {die "Can't determine model background ..."}
print "BACKGROUND FIELDS:  ";

if ($modeltype =~ /ram/) {
  if ($modeltime =~ /(\d\d\d\d\d)(\d\d\d\d)(\d\d\d\d)/ ) {
    $runtime = $2+0;
    $fcsthr = $3/100;
    print "Using $fcsthr hr fcst from local model started at $runtime UTC \n";
    print "(local model file timestamp = $modeltime)\n"; } } 
else {
  $bgmodelfile = $filename;
  $bgmodelfile =~ s/$logname/lga/;
  open(BGMODEL,$bgmodelfile) or die "Can't open $bgmodelfile.";
  foreach (<BGMODEL>) {
    if (/cmodel (.*)/) {
      $modelid = $1;
      $modelid =~ s/\ //g; }
    if (/Reading - (.*)/) {
      $pathname = $1; last; close BGMODEL; } }
  $basename = $1 if ($pathname =~ /([^\/]*)$/);
  if ($basename =~ /(\d\d\d\d\d)(\d\d\d\d)(\d\d)(\d\d)/) {
    $runtime = $2/100;
    $fcsthr = $4;
    print "Using $fcsthr hr fcst from $modelid started at $runtime UTC \n"; } 
  else {
    print "$modelid (Sorry -- can't decode model filename)\n"; } }

print "\nQC:\n";
@greplines = grep /QC/, @lines;
@greplines = grep /of/, @greplines;
print "@greplines[0]";
print "@greplines[1]";
print "@greplines[2]";
print "\n";
print "@greplines[3]";
print "@greplines[4]";
print "@greplines[5]";

print "\n";
@greplines = grep /Error/, @lines;
print "@greplines";
